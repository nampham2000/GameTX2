{"version":3,"sources":["file:///Users/waostudio/Desktop/GameTx1%202/assets/Scripts/GameController.ts"],"names":["_decorator","Button","Component","Label","math","Node","tween","Vec3","Animation","SpriteFrame","Sprite","EditBox","instantiate","Prefab","Graphics","Color","ccclass","property","GameC","type","totalUserBetUnder","totalUserBetOver","totalBetOver","totalBetUnder","listScore","listValueDice","listSprite","listButton","checkUnder","checkOver","gameEnd","checkEditFocus","shedu","nextRoll","timeRate","valueDice","balanceUser","cloneBalanUser","userValuebetUnder","cloneuserValuebetUnder","cloneuserValuebetOver","userValuebetOver","countdownTimerBet","countdownTimerResult","columnWidth","sum","countPlayerOver","countPlayerUnder","clonetotalUserBetUnder","clonetotalUserBetOver","checkouChat","results","columnValues","resultsHistory","ListDice1His","ListDice2His","ListDice3His","ramdomDice","lineGraphicsArray","start","value1k","value10k","value50k","value100k","value500k","value10M","value50M","i","length","button","node","on","EventType","CLICK","console","log","addScore","schedule","totalOverText","string","toString","countPlayerOverLb","to","scale","call","totalUnderText","countPlayerUnderLb","plate","getComponent","play","displayImagesResult","displayImagesResultHistory","startCountdown","scheduleRandomDice","createNodeHistory","createNodeDice1History","createNodeDice2History","createNodeDice3History","update","deltaTime","BalanceNumber","randomRangeInt","countDown","countDownResult","activeBetOverbtn","betOverNode","active","betBarNode","betUnderNode","activeBetUnderbtn","Score","UnderLableValueUser","OverLableValueUser","bet","randomValues","getRandomValues","displayImages","displayImagesHisDice","sumValues","ToatalDice","dickAnimationFinished","setTimeout","startCountdownResult","FINISHED","off","updateResults","updateResultsHistory","updateResultsHis","updateResultsDice1History","updateResultsDice2History","updateResultsDice3History","EffectUnder","Effect","indices","randomIndex","Math","floor","random","push","array","reduce","currentValue","forEach","value","index","spriteFrame","dice1","sprite","imageNodes","error","diceHis","imageNodesDiceRes","imageNodesResult","undefined","listSpriteResult","imageNodesResultHistory","listSpriteResultHistory","timeCountDown","timereset","countdownInterval","setInterval","clearInterval","newResult","shift","clearLineNode","LineNode","LineNodeDice1","LineNodeDice2","LineNodeDice3","chatAppear","Table","position","x","y","Chat","unchat","chatUnAppear","handleEvent","LableChat","editBoxChat","introduceBoardActive","introduceBoard","introduceBoardUnActive","historyNodeActive","HistoryNode","historyNodeUnActive","gapBetweenColumns","lineContainer","parent","graphics","addComponent","lineWidth","strokeColor","prevColumnNode","NumberNodesResultHistory","listSpritetNumberHistory","setPosition","moveTo","lineTo","stroke","ListDice1Node","ListDice2Node","ListDice3Node","createColumn","columnValue","columnNode","black","removeAllChildren","warn","unDice1","unDice1His","Dice1Hist","ActiveDice1","unDice2","unDice2His","Dice2Hist","ActiveDice2","unDice3","unDice3His","Dice3ist","ActiveDice3","activePage","page1His","page2His","page2Button1","page2Button2","Dice1His","Dice2His","Dice3His","activePage2","CancelBet","HistoryUserBetActiveH","HistoryUserBet","HistoryUserBetUnable","HistoryUserActiveH","HistoryUser","HistoryUserUnable","doubleBet","winRate","Winrate","winRateUn"],"mappings":"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","sourcesContent":["import {\n  _decorator,\n  Button,\n  Component,\n  Label,\n  math,\n  Node,\n  tween,\n  Vec3,\n  Animation,\n  SpriteFrame,\n  Sprite,\n  input,\n  Input,\n  macro,\n  EditBox,\n  NodeEventType,\n  EventKeyboard,\n  KeyCode,\n  instantiate,\n  Prefab,\n  Graphics,\n  Color,\n  SystemEvent,\n  Event,\n  log,\n} from \"cc\";\n\nconst { ccclass, property } = _decorator;\n\n@ccclass(\"GameC\")\nexport class GameC extends Component {\n  @property({\n    type: Node,\n  })\n  private betOverNode: Node;\n  @property({\n    type: Node,\n  })\n  private betUnderNode: Node;\n  @property({\n    type: Node,\n  })\n  private betBarNode: Node;\n\n  @property({\n    type: Node,\n  })\n  private plate: Node;\n\n  @property({\n    type: Node,\n  })\n  private Effect: Node;\n\n  @property({\n    type: Node,\n  })\n  private EffectUnder: Node;\n\n  @property({\n    type: Node,\n  })\n  private Chat: Node;\n\n  @property({\n    type: Node,\n  })\n  private Table: Node;\n\n  @property({\n    type: Node,\n  })\n  private unchat: Node;\n\n  @property({\n    type: Node,\n  })\n  private introduceBoard: Node;\n\n  @property({\n    type: Node,\n  })\n  private HistoryNode: Node;\n\n  @property({\n    type: Prefab,\n  })\n  private black: Prefab;\n\n  @property({\n    type: Node,\n  })\n  private numberHis: Node;\n\n  @property({\n    type: Node,\n  })\n  private LineNode: Node;\n\n  @property({\n    type: Node,\n  })\n  private LineNodeDice1: Node;\n\n  @property({\n    type: Node,\n  })\n  private Winrate: Node;\n\n  @property({\n    type: Node,\n  })\n  private LineNodeDice2: Node;\n\n  @property({\n    type: Node,\n  })\n  private LineNodeDice3: Node;\n\n  @property({\n    type: Node,\n  })\n  private Dice1Hist: Node;\n\n  @property({\n    type: Node,\n  })\n  private Dice2Hist: Node;\n\n  @property({\n    type: Node,\n  })\n  private Dice3ist: Node;\n\n  @property({\n    type: Node,\n  })\n  private page1His: Node;\n\n  @property({\n    type: Node,\n  })\n  private page2His: Node;\n\n  @property({\n    type: Node,\n  })\n  private Dice1His: Node;\n\n  @property({\n    type: Node,\n  })\n  private Dice2His: Node;\n\n  @property({\n    type: Node,\n  })\n  private Dice3His: Node;\n\n  @property({\n    type: Node,\n  })\n  private HistoryUserBet: Node;\n\n  @property({\n    type: Node,\n  })\n  private HistoryUser: Node;\n\n  //Lable\n  @property({\n    type: Label,\n  })\n  private UnderLableValueUser: Label;\n\n  @property({\n    type: Label,\n  })\n  private OverLableValueUser: Label;\n\n  @property({\n    type: Label,\n  })\n  private totalUnderText: Label;\n\n  @property({\n    type: Label,\n  })\n  private totalOverText: Label;\n  @property({\n    type: Label,\n  })\n  private countDown: Label;\n\n  @property({\n    type: Label,\n  })\n  private countDownResult: Label;\n\n  @property({\n    type: Label,\n  })\n  private countPlayerOverLb: Label;\n\n  @property({\n    type: Label,\n  })\n  private countPlayerUnderLb: Label;\n\n  @property({\n    type: Label,\n  })\n  private BalanceNumber: Label;\n\n  @property({\n    type: Label,\n  })\n  private ToatalDice: Label;\n\n  //BUTTON\n  @property({\n    type: Button,\n  })\n  value1k: Button;\n  @property({\n    type: Button,\n  })\n  value10k: Button;\n  @property({\n    type: Button,\n  })\n  value50k: Button;\n  @property({\n    type: Button,\n  })\n  value100k: Button;\n  @property({\n    type: Button,\n  })\n  value500k: Button;\n\n  @property({\n    type: Button,\n  })\n  value10M: Button;\n\n  @property({\n    type: Button,\n  })\n  private value50M: Button;\n\n  @property({\n    type: Button,\n  })\n  private unDice1His: Button;\n\n  @property({\n    type: Button,\n  })\n  private unDice2His: Button;\n\n  @property({\n    type: Button,\n  })\n  private unDice3His: Button;\n\n  @property({\n    type: Button,\n  })\n  private page2Button1: Button;\n\n  @property({\n    type: Button,\n  })\n  private page2Button2: Button;\n\n  @property({\n    type: SpriteFrame,\n  })\n  private dice1: SpriteFrame[] = [];\n\n  @property({\n    type: SpriteFrame,\n  })\n  private diceHis: SpriteFrame[] = [];\n\n  @property({ type: [Node] })\n  imageNodes: Node[] = [];\n\n  @property({ type: [Node] })\n  imageNodesDiceRes: Node[] = [];\n\n  @property({ type: [Node] })\n  imageNodesResult: Node[] = [];\n\n  @property({ type: [Node] })\n  imageNodesResultHistory: Node[] = [];\n\n  @property({ type: [Node] })\n  NumberNodesResultHistory: Node[] = [];\n\n  @property({ type: [Node] })\n  ListDice1Node: Node[] = [];\n\n  @property({ type: [Node] })\n  ListDice2Node: Node[] = [];\n\n  @property({ type: [Node] })\n  ListDice3Node: Node[] = [];\n\n  @property({ type: [Label] })\n  LableChat: Label[] = [];\n\n  @property({\n    type: SpriteFrame,\n  })\n  private listSpriteResult: SpriteFrame[] = [];\n\n  @property({\n    type: SpriteFrame,\n  })\n  private listSpriteResultHistory: SpriteFrame[] = [];\n\n  @property({\n    type: SpriteFrame,\n  })\n  private listSpritetNumberHistory: SpriteFrame[] = [];\n\n  @property({\n    type: EditBox,\n  })\n  private editBoxChat: EditBox;\n\n  private totalUserBetUnder: number = 0;\n  private totalUserBetOver: number = 0;\n  private totalBetOver: number = 0;\n  private totalBetUnder: number = 0;\n  private listScore: number[] = [\n    1000, 10000, 50000, 100000, 500000, 10000000, 50000000,\n  ];\n  private listValueDice: number[] = [1, 2, 3, 4, 5, 6];\n\n  private listSprite: SpriteFrame[] = [];\n  private listButton: Button[] = [];\n  private checkUnder: boolean = false;\n  private checkOver: boolean = false;\n  private gameEnd: boolean = false;\n  private checkEditFocus: boolean = false;\n  private shedu = null;\n  private nextRoll: number = 500;\n  private timeRate: number = 5000;\n  private valueDice: number = 0;\n  private balanceUser: number = 5000;\n  private cloneBalanUser: number = 5000;\n  private userValuebetUnder: number = 0;\n  private cloneuserValuebetUnder: number = 0;\n  private cloneuserValuebetOver: number = 0;\n  private userValuebetOver: number = 0;\n  private countdownTimerBet: number = 40;\n  private countdownTimerResult: number = 15;\n\n  // columnCount: number = 21;\n  private columnWidth: number = 34.5;\n  private sum: number = 0;\n  private countPlayerOver: number = 0;\n  private countPlayerUnder: number = 0;\n  private clonetotalUserBetUnder: number = 0;\n  private clonetotalUserBetOver: number = 0;\n  private checkouChat: number = 0;\n\n  private results: number[] = [];\n  private columnValues: number[] = [];\n  private resultsHistory: number[] = [];\n  private ListDice1His: number[] = [];\n  private ListDice2His: number[] = [];\n  private ListDice3His: number[] = [];\n  private ramdomDice: number[] = [];\n\n  private lineGraphicsArray: Graphics[] = [];\n  start() {\n    this.listButton = [\n      this.value1k,\n      this.value10k,\n      this.value50k,\n      this.value100k,\n      this.value500k,\n      this.value10M,\n      this.value50M,\n    ];\n    for (let i = 0; i < this.listButton.length; i++) {\n      let button = this.listButton[i];\n      button.node.on(Button.EventType.CLICK, () => {\n        console.log(this.cloneBalanUser);\n        if (\n          this.cloneBalanUser >= this.listScore[i] &&\n          this.cloneBalanUser >\n            this.totalUserBetOver + this.totalUserBetUnder &&\n          this.balanceUser !== 0\n        ) {\n          this.addScore(this.listScore[i]);\n        } else {\n          console.log(\"khong du tien\");\n        }\n      });\n    }\n\n    this.shedu = this.schedule(() => {\n      this.totalOverText.string = this.totalBetOver.toString();\n      this.countPlayerOverLb.string = this.countPlayerOver.toString();\n      tween(this.totalOverText.node)\n        .to(0.5, { scale: new Vec3(1.5, 1.5) })\n        .call(() => {\n          tween(this.totalOverText.node)\n            .to(0.5, { scale: new Vec3(1, 1) })\n            .start();\n        })\n        .start();\n    }, 1);\n\n    this.schedule(() => {\n      this.totalUnderText.string = this.totalBetUnder.toString();\n      this.countPlayerUnderLb.string = this.countPlayerUnder.toString();\n      tween(this.totalUnderText.node)\n        .to(0.5, { scale: new Vec3(1.5, 1.5) })\n        .call(() => {\n          tween(this.totalUnderText.node)\n            .to(0.5, { scale: new Vec3(1, 1) })\n            .start();\n        })\n        .start();\n    }, 1);\n\n    this.plate.getComponent(Animation).play(\"plateIn\");\n    this.displayImagesResult();\n    this.displayImagesResultHistory();\n    this.startCountdown(this.countdownTimerBet, 40);\n    this.scheduleRandomDice();\n    this.createNodeHistory();\n    this.createNodeDice1History();\n    this.createNodeDice2History();\n    this.createNodeDice3History();\n    // this.handleEvent();\n    // input.on(Input.EventType.KEY_DOWN,this.onKeyDown,this);\n  }\n\n  update(deltaTime: number) {\n    console.log(this.checkEditFocus);\n\n    this.BalanceNumber.string = this.balanceUser.toString();\n\n    if (this.gameEnd === false) {\n      this.totalBetOver = this.totalBetOver + math.randomRangeInt(1000, 10000);\n      this.totalBetUnder =\n        this.totalBetUnder + math.randomRangeInt(1000, 10000);\n      this.countPlayerOver = this.countPlayerOver + math.randomRangeInt(1, 10);\n      this.countPlayerUnder =\n        this.countPlayerUnder + math.randomRangeInt(1, 10);\n    }\n\n    if (this.gameEnd === true) {\n    }\n    this.countDown.string = this.countdownTimerBet.toString();\n    this.countDownResult.string = this.countdownTimerResult.toString();\n  }\n\n  private activeBetOverbtn() {\n    this.checkOver = true;\n    if (this.checkUnder === true) {\n      this.checkUnder = false;\n    }\n    this.betOverNode.active = true;\n    this.betBarNode.active = true;\n    if (this.betUnderNode.active === true) {\n      this.betUnderNode.active = false;\n    }\n  }\n\n  private activeBetUnderbtn() {\n    this.checkUnder = true;\n    if (this.checkOver === true) {\n      this.checkOver = false;\n    }\n    this.betUnderNode.active = true;\n    this.betBarNode.active = true;\n    if (this.betOverNode.active === true) {\n      this.betOverNode.active = false;\n    }\n  }\n\n  private addScore(Score: number) {\n    if (this.checkUnder === true) {\n      this.totalUserBetUnder = this.totalUserBetUnder + Score;\n      this.cloneuserValuebetUnder = 0;\n      this.clonetotalUserBetUnder = this.clonetotalUserBetUnder + Score;\n      this.UnderLableValueUser.string = this.totalUserBetUnder.toString();\n    }\n    if (this.checkOver === true) {\n      this.totalUserBetOver = this.totalUserBetOver + Score;\n      this.cloneuserValuebetOver = 0;\n      this.clonetotalUserBetOver = this.clonetotalUserBetOver + Score;\n      this.OverLableValueUser.string = this.totalUserBetOver.toString();\n    }\n  }\n\n  private bet() {\n    console.log(\"betover\" + this.clonetotalUserBetOver);\n\n    if (\n      this.checkOver === true &&\n      this.cloneBalanUser >= this.totalUserBetOver &&\n      this.balanceUser !== 0\n    ) {\n      this.balanceUser = this.balanceUser - this.clonetotalUserBetOver;\n      this.userValuebetOver += this.clonetotalUserBetOver;\n      this.clonetotalUserBetOver = 0;\n      this.OverLableValueUser.string = this.totalUserBetOver.toString();\n    } else if (\n      this.checkUnder === true &&\n      this.cloneBalanUser >= this.totalUserBetUnder &&\n      this.balanceUser !== 0\n    ) {\n      this.balanceUser = this.balanceUser - this.clonetotalUserBetUnder;\n      this.userValuebetUnder += this.clonetotalUserBetUnder;\n      this.clonetotalUserBetUnder = 0;\n      this.UnderLableValueUser.string = this.totalUserBetUnder.toString();\n    } else {\n      console.log(\"nghèo\");\n    }\n  }\n\n  private scheduleRandomDice() {\n    const randomValues = this.getRandomValues();\n    this.displayImages(randomValues);\n    this.displayImagesHisDice(randomValues);\n    this.sum = this.sumValues(randomValues);\n    this.ToatalDice.string = this.sum.toString();\n    let dickAnimationFinished = false;\n    setTimeout(() => {\n      this.plate.getComponent(Animation).play(\"Dick\");\n      this.startCountdownResult(this.countdownTimerResult, 15);\n      this.countDown.node.active = false;\n      this.countDownResult.node.active = true;\n\n      this.plate\n        .getComponent(Animation)\n        .on(Animation.EventType.FINISHED, () => {\n          dickAnimationFinished = true;\n          this.plate.active = false;\n\n          this.plate.getComponent(Animation).off(Animation.EventType.FINISHED);\n\n          if (this.sum < 10) {\n            this.updateResults(0);\n            this.displayImagesResult();\n            this.updateResultsHistory(0);\n            this.displayImagesResultHistory();\n\n            this.updateResultsHis(this.sum);\n            this.createNodeHistory();\n\n            this.updateResultsDice1History(this.ramdomDice[0]);\n            this.createNodeDice1History();\n\n            this.updateResultsDice2History(this.ramdomDice[1]);\n            this.createNodeDice2History();\n\n            this.updateResultsDice3History(this.ramdomDice[2]);\n            this.createNodeDice3History();\n\n            this.EffectUnder.active = true;\n            this.balanceUser += this.userValuebetUnder * 2;\n          } else {\n            this.updateResults(1);\n            this.displayImagesResult();\n            this.updateResultsHistory(1);\n            this.displayImagesResultHistory();\n\n            this.updateResultsHis(this.sum);\n            this.createNodeHistory();\n\n            this.updateResultsDice1History(this.ramdomDice[0]);\n            this.createNodeDice1History();\n\n            this.updateResultsDice2History(this.ramdomDice[1]);\n            this.createNodeDice2History();\n\n            this.updateResultsDice3History(this.ramdomDice[2]);\n            this.createNodeDice3History();\n\n            this.Effect.active = true;\n            this.balanceUser += this.userValuebetOver * 2;\n          }\n        });\n\n      setTimeout(() => {\n        this.countDownResult.node.active = false;\n        if (dickAnimationFinished) {\n          this.plate.active = true;\n          if (this.EffectUnder.active === true) {\n            this.EffectUnder.active = false;\n          }\n          if (this.Effect.active === true) {\n            this.Effect.active = false;\n          }\n          this.totalBetOver = 0;\n          this.totalBetUnder = 0;\n          this.countPlayerOver = 0;\n          this.countPlayerUnder = 0;\n          this.totalUserBetOver = 0;\n          this.totalUserBetUnder = 0;\n          this.userValuebetOver = 0;\n          this.userValuebetUnder = 0;\n          this.UnderLableValueUser.string = this.totalUserBetUnder.toString();\n          this.OverLableValueUser.string = this.totalUserBetOver.toString();\n          this.cloneBalanUser = this.balanceUser;\n          console.log(this.balanceUser);\n          console.log(this.cloneBalanUser);\n\n          this.plate.getComponent(Animation).play(\"plateIn\");\n          this.countDown.node.active = true;\n          this.startCountdown(this.countdownTimerBet, 40);\n\n          this.scheduleRandomDice();\n        } else {\n          this.scheduleRandomDice();\n        }\n      }, 1500);\n    }, 10000);\n  }\n  private getRandomValues() {\n    const indices = [1, 2, 3, 4, 5, 6];\n    this.ramdomDice = [];\n    for (let i = 0; i < 3; i++) {\n      const randomIndex = Math.floor(Math.random() * indices.length);\n      this.ramdomDice.push(indices[randomIndex]);\n    }\n    return this.ramdomDice;\n  }\n\n  private sumValues(array) {\n    return array.reduce((sum, currentValue) => sum + currentValue, 0);\n  }\n\n  private displayImages(randomValues) {\n    randomValues.forEach((value, index) => {\n      const spriteFrame = this.dice1[value - 1];\n      const sprite = this.imageNodes[index].getComponent(Sprite);\n      if (sprite && spriteFrame) {\n        sprite.spriteFrame = spriteFrame;\n      } else {\n        console.error(\"Sprite or SpriteFrame is missing!\");\n      }\n    });\n  }\n\n  private displayImagesHisDice(randomValues) {\n    randomValues.forEach((value, index) => {\n      const spriteFrame = this.diceHis[value - 1];\n      const sprite = this.imageNodesDiceRes[index].getComponent(Sprite);\n      if (sprite && spriteFrame) {\n        sprite.spriteFrame = spriteFrame;\n      } else {\n        console.error(\"Sprite or SpriteFrame is missing!\");\n      }\n    });\n  }\n\n  private displayImagesResult() {\n    this.imageNodesResult.forEach((node, index) => {\n      const value = this.results[index];\n      if (value !== undefined) {\n        // Kiểm tra xem giá trị có tồn tại hay không\n        const sprite = node.getComponent(Sprite);\n        if (sprite) {\n          let spriteFrame;\n          if (value === 0) {\n            spriteFrame = this.listSpriteResult[0]; // Thay spriteFrameA bằng spriteFrame bạn muốn gán cho giá trị 0\n          } else if (value === 1) {\n            spriteFrame = this.listSpriteResult[1]; // Thay spriteFrameB bằng spriteFrame bạn muốn gán cho giá trị 1\n          } else {\n            console.error(\"Invalid result value:\", value);\n            node.active = false; // Ẩn node ảnh nếu giá trị không hợp lệ\n            return;\n          }\n          sprite.spriteFrame = spriteFrame;\n          node.active = true; // Kích hoạt node ảnh\n        } else {\n          console.error(\"Sprite is missing!\");\n        }\n      } else {\n        node.active = false; // Ẩn node ảnh nếu giá trị không tồn tại\n      }\n    });\n  }\n\n  private displayImagesResultHistory() {\n    this.imageNodesResultHistory.forEach((node, index) => {\n      const value = this.resultsHistory[index];\n      if (value !== undefined) {\n        // Kiểm tra xem giá trị có tồn tại hay không\n        const sprite = node.getComponent(Sprite);\n        if (sprite) {\n          let spriteFrame;\n          if (value === 0) {\n            spriteFrame = this.listSpriteResultHistory[0]; // Thay spriteFrameA bằng spriteFrame bạn muốn gán cho giá trị 0\n          } else if (value === 1) {\n            spriteFrame = this.listSpriteResultHistory[1]; // Thay spriteFrameB bằng spriteFrame bạn muốn gán cho giá trị 1\n          } else {\n            console.error(\"Invalid result value:\", value);\n            node.active = false; // Ẩn node ảnh nếu giá trị không hợp lệ\n            return;\n          }\n          sprite.spriteFrame = spriteFrame;\n          node.active = true; // Kích hoạt node ảnh\n        } else {\n          console.error(\"Sprite is missing!\");\n        }\n      } else {\n        node.active = false; // Ẩn node ảnh nếu giá trị không tồn tại\n      }\n    });\n  }\n\n  private startCountdownResult(timeCountDown: number, timereset: number) {\n    this.countdownTimerResult = 15;\n    const countdownInterval = setInterval(() => {\n      this.countdownTimerResult--;\n      if (this.countdownTimerResult <= 0) {\n        clearInterval(countdownInterval);\n      }\n    }, 1000);\n  }\n\n  private startCountdown(timeCountDown: number, timereset: number) {\n    this.countdownTimerBet = 40;\n    const countdownInterval = setInterval(() => {\n      this.countdownTimerBet--;\n      if (this.countdownTimerBet <= 0) {\n        clearInterval(countdownInterval);\n      }\n    }, 1000);\n  }\n\n  private updateResults(newResult: number): void {\n    this.results.push(newResult);\n    if (this.results.length > 20) {\n      this.results.shift();\n    }\n  }\n\n  private updateResultsHis(newResult: number): void {\n    this.columnValues.push(newResult);\n\n    if (this.columnValues.length > 21) {\n      this.columnValues.shift();\n      this.clearLineNode(this.LineNode);\n    }\n  }\n\n  private updateResultsHistory(newResult: number): void {\n    this.resultsHistory.push(newResult);\n    if (this.resultsHistory.length > 100) {\n      this.resultsHistory.shift();\n    }\n  }\n  private updateResultsDice1History(newResult: number): void {\n    this.ListDice1His.push(newResult);\n    if (this.resultsHistory.length > 21) {\n      this.ListDice1His.shift();\n      this.clearLineNode(this.LineNodeDice1);\n    }\n  }\n\n  private updateResultsDice2History(newResult: number): void {\n    this.ListDice2His.push(newResult);\n    if (this.ListDice2His.length > 21) {\n      this.ListDice2His.shift();\n      this.clearLineNode(this.LineNodeDice2);\n    }\n  }\n\n  private updateResultsDice3History(newResult: number): void {\n    this.ListDice3His.push(newResult);\n    if (this.ListDice3His.length > 21) {\n      this.ListDice3His.shift();\n      this.clearLineNode(this.LineNodeDice3);\n    }\n  }\n\n  private chatAppear() {\n    // this.Chat.active = true;\n    // this.unchat.active = true;\n    tween(this.Table)\n      .to(0.3, {\n        position: new Vec3(this.Table.position.x - 130, this.Table.position.y),\n      })\n      .call(() => {\n        this.Chat.active = true;\n      })\n      .start();\n    this.unchat.active = true;\n\n    // tween(this.Chat)\n    //   .to(0.3, {\n    //     position: new Vec3(this.Chat.position.x - 300, this.Chat.position.y),\n    //   })\n    //   .start();\n  }\n\n  private chatUnAppear() {\n    this.Chat.active = false;\n    this.unchat.active = false;\n\n    tween(this.Table)\n      .to(0.3, {\n        position: new Vec3(this.Table.position.x + 130, this.Table.position.y),\n      })\n      .start();\n\n    // tween(this.Chat)\n    //   .to(0.3, {\n    //     position: new Vec3(this.Chat.position.x + 300, this.Chat.position.y),\n    //   })\n    //   .start();\n  }\n\n  // private onDestroy() {\n  //   // Hủy lắng nghe sự kiện bàn phím khi scene bị hủy\n  //   input.off(Input.EventType.KEY_DOWN, this.onKeyDown, this);\n  // }\n\n  private handleEvent(): void {\n    // Move the value of each label to the next label\n    for (let i = this.LableChat.length - 1; i > 0; i--) {\n      this.LableChat[i].string = this.LableChat[i - 1].string;\n    }\n\n    // Assign the value of the edit box to the first label\n    this.LableChat[0].string = \"YOU: \" + this.editBoxChat.string;\n    this.editBoxChat.string = \"\";\n    // this.editBoxChat.node.on(EditBox.EventType.EDITING_RETURN)\n  }\n  private introduceBoardActive() {\n    this.introduceBoard.active = true;\n  }\n\n  private introduceBoardUnActive() {\n    this.introduceBoard.active = false;\n  }\n\n  private historyNodeActive() {\n    this.HistoryNode.active = true;\n  }\n\n  private historyNodeUnActive() {\n    this.HistoryNode.active = false;\n  }\n\n  private createNodeHistory() {\n    let gapBetweenColumns = this.columnWidth * 1.5;\n\n    let lineContainer = new Node();\n    lineContainer.parent = this.LineNode;\n\n    let graphics = lineContainer.addComponent(Graphics);\n    graphics.lineWidth = 10;\n    graphics.strokeColor = new Color(255, 0, 0);\n    let prevColumnNode: Node = null;\n    this.NumberNodesResultHistory.forEach((node, index) => {\n      const value = this.columnValues[index];\n      if (value !== undefined) {\n        const sprite = node.getComponent(Sprite);\n        if (sprite) {\n          let spriteFrame;\n          if (value >= 3 && value <= 10) {\n            if (value === 3) {\n              spriteFrame = this.listSpritetNumberHistory[0];\n            }\n\n            if (value === 4) {\n              spriteFrame = this.listSpritetNumberHistory[1];\n            }\n\n            if (value === 5) {\n              spriteFrame = this.listSpritetNumberHistory[2];\n            }\n\n            if (value === 6) {\n              spriteFrame = this.listSpritetNumberHistory[3];\n            }\n\n            if (value === 7) {\n              spriteFrame = this.listSpritetNumberHistory[4];\n            }\n\n            if (value === 8) {\n              spriteFrame = this.listSpritetNumberHistory[5];\n            }\n\n            if (value === 9) {\n              spriteFrame = this.listSpritetNumberHistory[6];\n            }\n\n            if (value === 10) {\n              spriteFrame = this.listSpritetNumberHistory[7];\n            }\n            node.setPosition(value * gapBetweenColumns * 0.2, node.position.y);\n            // if\n          } else if (value > 10) {\n            node.setPosition(value * gapBetweenColumns * 0.2, node.position.y);\n            if (value === 11) {\n              spriteFrame = this.listSpritetNumberHistory[8];\n            }\n\n            if (value === 12) {\n              spriteFrame = this.listSpritetNumberHistory[9];\n            }\n\n            if (value === 13) {\n              spriteFrame = this.listSpritetNumberHistory[10];\n            }\n\n            if (value === 14) {\n              spriteFrame = this.listSpritetNumberHistory[11];\n            }\n\n            if (value === 15) {\n              spriteFrame = this.listSpritetNumberHistory[12];\n            }\n\n            if (value === 16) {\n              spriteFrame = this.listSpritetNumberHistory[13];\n            }\n\n            if (value === 17) {\n              spriteFrame = this.listSpritetNumberHistory[14];\n            }\n\n            if (value === 18) {\n              spriteFrame = this.listSpritetNumberHistory[15];\n            }\n          } else {\n            console.error(\"Invalid result value:\", value);\n            node.active = false; // Ẩn node ảnh nếu giá trị không hợp lệ\n            return;\n          }\n          sprite.spriteFrame = spriteFrame;\n          node.active = true; // Kích hoạt node ảnh\n          if (prevColumnNode) {\n            graphics.moveTo(\n              prevColumnNode.position.x,\n              prevColumnNode.position.y\n            );\n            graphics.lineTo(node.position.x, node.position.y);\n            graphics.stroke();\n          }\n          prevColumnNode = node;\n        } else {\n          console.error(\"Sprite is missing!\");\n        }\n      } else {\n        node.active = false; // Ẩn node ảnh nếu giá trị không tồn tại\n      }\n    });\n  }\n\n  private createNodeDice1History() {\n    let gapBetweenColumns = this.columnWidth * 1.5;\n\n    let lineContainer = new Node();\n    lineContainer.parent = this.LineNodeDice1;\n\n    let graphics = lineContainer.addComponent(Graphics);\n    graphics.lineWidth = 5;\n    graphics.strokeColor = new Color(247, 62, 245);\n    let prevColumnNode: Node = null;\n    this.ListDice1Node.forEach((node, index) => {\n      const value = this.ListDice1His[index];\n      if (value !== undefined) {\n        node.setPosition(value * gapBetweenColumns * 0.61, node.position.y);\n        node.active = true;\n        if (prevColumnNode) {\n          graphics.moveTo(prevColumnNode.position.x, prevColumnNode.position.y);\n          graphics.lineTo(node.position.x, node.position.y);\n          graphics.stroke();\n        }\n        prevColumnNode = node;\n      } else {\n        node.active = false; // Ẩn node ảnh nếu giá trị không tồn tại\n      }\n    });\n  }\n\n  private createNodeDice2History() {\n    let gapBetweenColumns = this.columnWidth * 1.5;\n\n    let lineContainer = new Node();\n    lineContainer.parent = this.LineNodeDice2;\n\n    let graphics = lineContainer.addComponent(Graphics);\n    graphics.lineWidth = 5;\n    graphics.strokeColor = new Color(222, 51, 70);\n    let prevColumnNode: Node = null;\n    this.ListDice2Node.forEach((node, index) => {\n      const value = this.ListDice2His[index];\n      if (value !== undefined) {\n        node.setPosition(value * gapBetweenColumns * 0.61, node.position.y);\n        node.active = true;\n        if (prevColumnNode) {\n          graphics.moveTo(prevColumnNode.position.x, prevColumnNode.position.y);\n          graphics.lineTo(node.position.x, node.position.y);\n          graphics.stroke();\n        }\n        prevColumnNode = node;\n      } else {\n        node.active = false; // Ẩn node ảnh nếu giá trị không tồn tại\n      }\n    });\n  }\n\n  private createNodeDice3History() {\n    let gapBetweenColumns = this.columnWidth * 1.5;\n\n    let lineContainer = new Node();\n    lineContainer.parent = this.LineNodeDice3;\n\n    let graphics = lineContainer.addComponent(Graphics);\n    graphics.lineWidth = 5;\n    graphics.strokeColor = new Color(78, 251, 151);\n    let prevColumnNode: Node = null;\n    this.ListDice3Node.forEach((node, index) => {\n      const value = this.ListDice3His[index];\n      if (value !== undefined) {\n        node.setPosition(value * gapBetweenColumns * 0.61, node.position.y);\n        node.active = true;\n        if (prevColumnNode) {\n          graphics.moveTo(prevColumnNode.position.x, prevColumnNode.position.y);\n          graphics.lineTo(node.position.x, node.position.y);\n          graphics.stroke();\n        }\n        prevColumnNode = node;\n      } else {\n        node.active = false; // Ẩn node ảnh nếu giá trị không tồn tại\n      }\n    });\n  }\n\n  createColumn(columnValue: number): Node {\n    let columnNode = instantiate(this.black);\n    return columnNode;\n  }\n\n  private clearLineNode(LineNode: Node) {\n    // Kiểm tra xem lineNode có tồn tại không\n    if (LineNode) {\n      // Xoá tất cả các nút con của lineNode\n      LineNode.removeAllChildren();\n    } else {\n      console.warn(\"LineNode is not available.\");\n    }\n  }\n\n  private unDice1() {\n    this.unDice1His.node.active = false;\n    this.LineNodeDice1.active = false;\n    this.Dice1Hist.active = false;\n  }\n\n  private ActiveDice1() {\n    this.unDice1His.node.active = true;\n    this.LineNodeDice1.active = true;\n    this.Dice1Hist.active = true;\n  }\n\n  private unDice2() {\n    this.unDice2His.node.active = false;\n    this.LineNodeDice2.active = false;\n    this.Dice2Hist.active = false;\n  }\n\n  private ActiveDice2() {\n    this.unDice2His.node.active = true;\n    this.LineNodeDice2.active = true;\n    this.Dice2Hist.active = true;\n  }\n\n  private unDice3() {\n    this.unDice3His.node.active = false;\n    this.LineNodeDice3.active = false;\n    this.Dice3ist.active = false;\n  }\n\n  private ActiveDice3() {\n    this.unDice3His.node.active = true;\n    this.LineNodeDice3.active = true;\n    this.Dice3ist.active = true;\n  }\n\n  private activePage() {\n    if (this.page1His.active === true) {\n      this.page2His.active = true;\n      this.page1His.active = false;\n      this.page2Button1.node.active = true;\n      this.page2Button2.node.active = true;\n      if (this.Dice1His.active === false) {\n        this.Dice1His.active = true;\n        this.Dice2His.active = true;\n        this.Dice3His.active = true;\n      }\n    }\n  }\n\n  private activePage2() {\n    if (this.page2His.active === true) {\n      this.page2His.active = false;\n      this.page1His.active = true;\n      this.page2Button1.node.active = false;\n      this.page2Button2.node.active = false;\n      if (this.Dice1His.active === true) {\n        this.Dice1His.active = false;\n        this.Dice2His.active = false;\n        this.Dice3His.active = false;\n      }\n    }\n  }\n\n  private CancelBet() {\n    if (this.gameEnd === false) {\n      this.totalUserBetOver = 0;\n      this.totalUserBetUnder = 0;\n      this.UnderLableValueUser.string = this.userValuebetUnder.toString();\n      this.OverLableValueUser.string = this.userValuebetOver.toString();\n    }\n  }\n\n  private HistoryUserBetActiveH() {\n    this.HistoryUserBet.active = true;\n  }\n\n  private HistoryUserBetUnable() {\n    this.HistoryUserBet.active = false;\n  }\n\n  private HistoryUserActiveH() {\n    this.HistoryUser.active = true;\n  }\n\n  private HistoryUserUnable() {\n    this.HistoryUser.active = false;\n  }\n\n  private doubleBet() {\n    if (\n      this.checkOver === true &&\n      this.totalUserBetOver * 2 <= this.cloneBalanUser &&\n      this.totalUserBetOver * 2 <= this.balanceUser\n    ) {\n      this.totalUserBetOver = this.totalUserBetOver * 2;\n      this.clonetotalUserBetOver = this.totalUserBetOver;\n      this.OverLableValueUser.string = this.totalUserBetOver.toString();\n    }\n\n    if (\n      this.checkUnder === true &&\n      this.totalUserBetUnder * 2 <= this.cloneBalanUser\n    ) {\n      this.totalUserBetUnder = this.totalUserBetUnder * 2;\n      this.clonetotalUserBetUnder = this.totalUserBetUnder;\n      this.UnderLableValueUser.string = this.totalUserBetOver.toString();\n    }\n  }\n\n  private winRate() {\n    this.Winrate.active = true;\n  }\n  private winRateUn() {\n    this.Winrate.active = false;\n  }\n}\n"]}