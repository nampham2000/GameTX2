{"version":3,"sources":["file:///C:/Users/Admin/Downloads/Telegram%20Desktop/GameTx%20(2)/GameTx/assets/Scripts/GameController.ts"],"names":["_decorator","Button","Component","Label","math","Node","tween","Vec3","Animation","SpriteFrame","Sprite","EditBox","KeyCode","instantiate","Prefab","Graphics","Color","ccclass","property","GameC","type","totalUserBetUnder","totalUserBetOver","totalBetOver","totalBetUnder","listScore","listValueDice","listSprite","listButton","checkUnder","checkOver","gameEnd","shedu","nextRoll","timeRate","valueDice","balanceUser","userValuebetUnder","userValuebetOver","countdownTimerBet","countdownTimerResult","columnWidth","sum","results","columnValues","resultsHistory","lineGraphicsArray","start","value1k","value10k","value50k","value100k","value500k","value10M","value50M","i","length","button","node","on","EventType","CLICK","addScore","console","log","schedule","totalOverText","string","toString","to","scale","call","totalUnderText","plate","getComponent","play","displayImagesResult","displayImagesResultHistory","startCountdown","scheduleRandomDice","update","deltaTime","editBoxChat","isFocused","KEY_DOWN","onKeyDown","randomRangeInt","countDown","countDownResult","activeBetOverbtn","betOverNode","active","betBarNode","betUnderNode","activeBetUnderbtn","Score","UnderLableValueUser","OverLableValueUser","bet","randomValues","getRandomValues","displayImages","sumValues","dickAnimationFinished","setTimeout","startCountdownResult","FINISHED","off","updateResultsHis","createNodeHistory","EffectUnder","Effect","indices","randomIndices","randomIndex","Math","floor","random","push","array","reduce","currentValue","forEach","value","index","spriteFrame","dice1","sprite","imageNodes","error","imageNodesResult","undefined","listSpriteResult","imageNodesResultHistory","listSpriteResultHistory","timeCountDown","timereset","countdownInterval","setInterval","clearInterval","updateResults","newResult","shift","updateConnections","updateResultsHistory","chatAppear","Chat","unchat","Table","position","x","y","chatUnAppear","event","keyCode","ENTER","message","handleChatMessage","introduceBoardActive","introduceBoard","introduceBoardUnActive","historyNodeActive","HistoryNode","historyNodeUnActive","gapBetweenColumns","lineContainer","parent","LineNode","graphics","addComponent","lineWidth","strokeColor","prevColumnNode","NumberNodesResultHistory","setPosition","moveTo","lineTo","stroke","createColumn","columnValue","columnNode","black","clearOldConnections","destroy"],"mappings":"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","sourcesContent":["import {\n  _decorator,\n  Button,\n  Component,\n  Label,\n  math,\n  Node,\n  tween,\n  Vec3,\n  Animation,\n  SpriteFrame,\n  Sprite,\n  input,\n  Input,\n  macro,\n  EditBox,\n  NodeEventType,\n  EventKeyboard,\n  KeyCode,\n  instantiate,\n  Prefab,\n  Graphics,\n  Color,\n} from \"cc\";\nconst { ccclass, property } = _decorator;\n\n@ccclass(\"GameC\")\nexport class GameC extends Component {\n  @property({\n    type: Node,\n  })\n  private betOverNode: Node;\n  @property({\n    type: Node,\n  })\n  private betUnderNode: Node;\n  @property({\n    type: Node,\n  })\n  private betBarNode: Node;\n\n  @property({\n    type: Node,\n  })\n  private plate: Node;\n\n  @property({\n    type: Node,\n  })\n  private Effect: Node;\n\n  @property({\n    type: Node,\n  })\n  private EffectUnder: Node;\n\n  @property({\n    type: Node,\n  })\n  private Chat: Node;\n\n  @property({\n    type: Node,\n  })\n  private Table: Node;\n\n  @property({\n    type: Node,\n  })\n  private unchat: Node;\n\n  @property({\n    type: Node,\n  })\n  private introduceBoard: Node;\n\n  @property({\n    type: Node,\n  })\n  private HistoryNode: Node;\n\n  @property({\n    type: Prefab,\n  })\n  private black: Prefab;\n\n  @property({\n    type: Node,\n  })\n  private numberHis: Node;\n\n  @property({\n    type: Node,\n  })\n  private LineNode: Node;\n\n\n\n  //Lable\n  @property({\n    type: Label,\n  })\n  private UnderLableValueUser: Label;\n\n  @property({\n    type: Label,\n  })\n  private OverLableValueUser: Label;\n\n  @property({\n    type: Label,\n  })\n  private totalUnderText: Label;\n\n  @property({\n    type: Label,\n  })\n  private totalOverText: Label;\n  @property({\n    type: Label,\n  })\n  private countDown: Label;\n\n  @property({\n    type: Label,\n  })\n  private countDownResult: Label;\n\n  //BUTTON\n  @property({\n    type: Button,\n  })\n  value1k: Button;\n  @property({\n    type: Button,\n  })\n  value10k: Button;\n  @property({\n    type: Button,\n  })\n  value50k: Button;\n  @property({\n    type: Button,\n  })\n  value100k: Button;\n  @property({\n    type: Button,\n  })\n  value500k: Button;\n\n  @property({\n    type: Button,\n  })\n  value10M: Button;\n\n  @property({\n    type: Button,\n  })\n  private value50M: Button;\n\n  @property({\n    type: SpriteFrame,\n  })\n  private dice1: SpriteFrame[] = [];\n\n  @property({ type: [Node] })\n  imageNodes: Node[] = [];\n\n  @property({ type: [Node] })\n  imageNodesResult: Node[] = [];\n  \n  @property({ type: [Node] })\n  imageNodesResultHistory: Node[] = [];\n\n  @property({ type: [Node] })\n  NumberNodesResultHistory: Node[] = [];\n\n  @property({\n    type: SpriteFrame,\n  })\n  private listSpriteResult: SpriteFrame[] = [];\n\n  @property({\n    type: SpriteFrame,\n  })\n  private listSpriteResultHistory: SpriteFrame[] = [];\n\n\n  @property({\n    type: EditBox,\n  })\n  private editBoxChat: EditBox;\n\n  private totalUserBetUnder: number = 0;\n  private totalUserBetOver: number = 0;\n  private totalBetOver: number = 0;\n  private totalBetUnder: number = 0;\n  private listScore: number[] = [\n    1000, 10000, 50000, 100000, 500000, 10000000, 50000000,\n  ];\n  private listValueDice: number[] = [1, 2, 3, 4, 5, 6];\n\n  private listSprite: SpriteFrame[] = [];\n  private listButton: Button[] = [];\n  private checkUnder: boolean = false;\n  private checkOver: boolean = false;\n  private gameEnd: boolean = false;\n  private shedu = null;\n  private nextRoll: number = 500;\n  private timeRate: number = 5000;\n  private valueDice: number = 0;\n  private balanceUser: number = 5000;\n  private userValuebetUnder: number = 0;\n  private userValuebetOver: number = 0;\n  private countdownTimerBet: number = 40;\n  private countdownTimerResult: number = 15;\n  // columnCount: number = 21;\n  columnWidth: number = 34.5;\n  private sum:number=0;\n\n  private results: number[] = [];\n  private columnValues: number[] = [];\n  private resultsHistory: number[] = [];\n\n  private lineGraphicsArray: Graphics[] = [];\n  start() {\n    // this.createNodeHistory();\n    this.listButton = [\n      this.value1k,\n      this.value10k,\n      this.value50k,\n      this.value100k,\n      this.value500k,\n      this.value10M,\n      this.value50M,\n    ];\n    for (let i = 0; i < this.listButton.length; i++) {\n      let button = this.listButton[i];\n      button.node.on(Button.EventType.CLICK, () => {\n        if (\n          this.balanceUser > this.listScore[i] &&\n          this.balanceUser > this.totalUserBetOver + this.totalUserBetUnder\n        ) {\n          this.addScore(this.listScore[i]);\n        } else {\n          console.log(\"khong du tien\");\n        }\n      });\n    }\n\n    this.shedu = this.schedule(() => {\n      this.totalOverText.string = this.totalBetOver.toString();\n      tween(this.totalOverText.node)\n        .to(0.5, { scale: new Vec3(1.5, 1.5) })\n        .call(() => {\n          tween(this.totalOverText.node)\n            .to(0.5, { scale: new Vec3(1, 1) })\n            .start();\n        })\n        .start();\n    }, 1);\n\n    this.schedule(() => {\n      this.totalUnderText.string = this.totalBetUnder.toString();\n      tween(this.totalUnderText.node)\n        .to(0.5, { scale: new Vec3(1.5, 1.5) })\n        .call(() => {\n          tween(this.totalUnderText.node)\n            .to(0.5, { scale: new Vec3(1, 1) })\n            .start();\n        })\n        .start();\n    }, 1);\n\n    this.plate.getComponent(Animation).play(\"plateIn\");\n    this.displayImagesResult();\n    this.displayImagesResultHistory();\n    this.startCountdown(this.countdownTimerBet, 40);\n    this.scheduleRandomDice();\n  }\n\n  update(deltaTime: number) {\n    console.log(this.editBoxChat.isFocused());\n    if (this.editBoxChat.isFocused()) {\n      this.editBoxChat.node.on(Node.EventType.KEY_DOWN, this.onKeyDown, this);\n    }\n    if (this.gameEnd === false) {\n      this.totalBetOver = this.totalBetOver + math.randomRangeInt(1000, 10000);\n      this.totalBetUnder =\n        this.totalBetUnder + math.randomRangeInt(1000, 10000);\n    }\n\n    if (this.gameEnd === true) {\n    }\n    this.countDown.string = this.countdownTimerBet.toString();\n    this.countDownResult.string = this.countdownTimerResult.toString();\n  }\n\n  private activeBetOverbtn() {\n    this.checkOver = true;\n    if (this.checkUnder === true) {\n      this.checkUnder = false;\n    }\n    this.betOverNode.active = true;\n    this.betBarNode.active = true;\n    if (this.betUnderNode.active === true) {\n      this.betUnderNode.active = false;\n    }\n  }\n\n  private activeBetUnderbtn() {\n    this.checkUnder = true;\n    if (this.checkOver === true) {\n      this.checkOver = false;\n    }\n    this.betUnderNode.active = true;\n    this.betBarNode.active = true;\n    if (this.betOverNode.active === true) {\n      this.betOverNode.active = false;\n    }\n  }\n\n  private addScore(Score: number) {\n    if (this.checkUnder === true) {\n      this.totalUserBetUnder = this.totalUserBetUnder + Score;\n      this.UnderLableValueUser.string = this.totalUserBetUnder.toString();\n    }\n    if (this.checkOver === true) {\n      this.totalUserBetOver = this.totalUserBetOver + Score;\n      this.OverLableValueUser.string = this.totalUserBetOver.toString();\n    }\n  }\n\n  private bet() {\n    if (this.checkOver === true && this.balanceUser >= this.totalUserBetOver) {\n      this.balanceUser = this.balanceUser - this.totalUserBetOver;\n      this.userValuebetOver += this.totalUserBetOver;\n      this.totalUserBetOver = 0;\n      this.OverLableValueUser.string = this.totalUserBetUnder.toString();\n    } else if (\n      this.checkUnder === true &&\n      this.balanceUser >= this.totalUserBetUnder\n    ) {\n      this.balanceUser = this.balanceUser - this.totalUserBetUnder;\n      this.userValuebetUnder += this.totalUserBetUnder;\n      this.totalUserBetUnder = 0;\n      this.UnderLableValueUser.string = this.totalUserBetOver.toString();\n      console.log(\"betUnder\", this.userValuebetUnder);\n      console.log(this.balanceUser);\n    } else {\n      console.log(\"nghèo\");\n    }\n  }\n\n  private scheduleRandomDice() {\n    const randomValues = this.getRandomValues();\n    this.displayImages(randomValues);\n     this.sum = this.sumValues(randomValues);\n\n    let dickAnimationFinished = false;\n    setTimeout(() => {\n      this.plate.getComponent(Animation).play(\"Dick\");\n      this.startCountdownResult(this.countdownTimerResult, 15);\n      this.countDown.node.active = false;\n      this.countDownResult.node.active = true;\n\n      this.plate\n        .getComponent(Animation)\n        .on(Animation.EventType.FINISHED, () => {\n          dickAnimationFinished = true;\n          this.plate.active = false;\n\n          this.plate.getComponent(Animation).off(Animation.EventType.FINISHED);\n\n          if ( this.sum < 10) {\n            // this.updateResults(0);\n            // this.displayImagesResult();\n            // this.updateResultsHistory(0);\n            // this.displayImagesResultHistory();\n\n            this.updateResultsHis(this.sum)\n            this.createNodeHistory();\n            this.EffectUnder.active = true;\n            this.balanceUser += this.userValuebetUnder * 2;\n          } else {\n            \n            // this.updateResults(1);\n            // this.displayImagesResult();\n            // this.updateResultsHistory(1);\n            // this.displayImagesResultHistory();\n            this.updateResultsHis(this.sum)\n            this.createNodeHistory();\n\n            this.Effect.active = true;\n            this.balanceUser += this.userValuebetOver * 2;\n          }\n        });\n\n      setTimeout(() => {\n        this.countDownResult.node.active = false;\n        if (dickAnimationFinished) {\n          this.plate.active = true;\n          if (this.EffectUnder.active === true) {\n            this.EffectUnder.active = false;\n          }\n          if (this.Effect.active === true) {\n            this.Effect.active = false;\n          }\n          this.totalBetOver = 0;\n          this.totalBetUnder = 0;\n          this.plate.getComponent(Animation).play(\"plateIn\");\n          this.countDown.node.active = true;\n          this.startCountdown(this.countdownTimerBet, 40);\n\n          this.scheduleRandomDice();\n        } else {\n          this.scheduleRandomDice();\n        }\n      }, 1500);\n    }, 4000);\n  }\n  private getRandomValues() {\n    const indices = [1, 2, 3, 4, 5, 6];\n    const randomIndices = [];\n    for (let i = 0; i < 3; i++) {\n      const randomIndex = Math.floor(Math.random() * indices.length);\n      randomIndices.push(indices[randomIndex]);\n    }\n    return randomIndices;\n  }\n\n  private sumValues(array) {\n    return array.reduce((sum, currentValue) => sum + currentValue, 0);\n  }\n\n  private displayImages(randomValues) {\n    randomValues.forEach((value, index) => {\n      const spriteFrame = this.dice1[value - 1];\n      const sprite = this.imageNodes[index].getComponent(Sprite);\n      if (sprite && spriteFrame) {\n        sprite.spriteFrame = spriteFrame;\n      } else {\n        console.error(\"Sprite or SpriteFrame is missing!\");\n      }\n    });\n  }\n\n  private displayImagesResult() {\n    this.imageNodesResult.forEach((node, index) => {\n      const value = this.results[index];\n      if (value !== undefined) {\n        // Kiểm tra xem giá trị có tồn tại hay không\n        const sprite = node.getComponent(Sprite);\n        if (sprite) {\n          let spriteFrame;\n          if (value === 0) {\n            spriteFrame = this.listSpriteResult[0]; // Thay spriteFrameA bằng spriteFrame bạn muốn gán cho giá trị 0\n          } else if (value === 1) {\n            spriteFrame = this.listSpriteResult[1]; // Thay spriteFrameB bằng spriteFrame bạn muốn gán cho giá trị 1\n          } else {\n            console.error(\"Invalid result value:\", value);\n            node.active = false; // Ẩn node ảnh nếu giá trị không hợp lệ\n            return;\n          }\n          sprite.spriteFrame = spriteFrame;\n          node.active = true; // Kích hoạt node ảnh\n        } else {\n          console.error(\"Sprite is missing!\");\n        }\n      } else {\n        node.active = false; // Ẩn node ảnh nếu giá trị không tồn tại\n      }\n    });\n  }\n\n  private displayImagesResultHistory() {\n    this.imageNodesResultHistory.forEach((node, index) => {\n      const value = this.resultsHistory[index];\n      if (value !== undefined) {\n        // Kiểm tra xem giá trị có tồn tại hay không\n        const sprite = node.getComponent(Sprite);\n        if (sprite) {\n          let spriteFrame;\n          if (value === 0) {\n            spriteFrame = this.listSpriteResultHistory[0]; // Thay spriteFrameA bằng spriteFrame bạn muốn gán cho giá trị 0\n          } else if (value === 1) {\n            spriteFrame = this.listSpriteResultHistory[1]; // Thay spriteFrameB bằng spriteFrame bạn muốn gán cho giá trị 1\n          } else {\n            console.error(\"Invalid result value:\", value);\n            node.active = false; // Ẩn node ảnh nếu giá trị không hợp lệ\n            return;\n          }\n          sprite.spriteFrame = spriteFrame;\n          node.active = true; // Kích hoạt node ảnh\n        } else {\n          console.error(\"Sprite is missing!\");\n        }\n      } else {\n        node.active = false; // Ẩn node ảnh nếu giá trị không tồn tại\n      }\n    });\n  }\n\n  private startCountdownResult(timeCountDown: number, timereset: number) {\n    this.countdownTimerResult = 15;\n    const countdownInterval = setInterval(() => {\n      this.countdownTimerResult--;\n      if (this.countdownTimerResult <= 0) {\n        clearInterval(countdownInterval);\n      }\n    }, 1000);\n  }\n\n  private startCountdown(timeCountDown: number, timereset: number) {\n    this.countdownTimerBet = 40;\n    const countdownInterval = setInterval(() => {\n      this.countdownTimerBet--;\n      if (this.countdownTimerBet <= 0) {\n        clearInterval(countdownInterval);\n      }\n    }, 1000);\n  }\n\n  private updateResults(newResult: number): void {\n    this.results.push(newResult);\n    if (this.results.length > 20) {\n      this.results.shift();\n    }\n  }\n\n  // private updateResultsHis(newResult: number): void {\n  //   this.columnValues.push(newResult);\n    \n  //   if (this.columnValues.length > 21) {\n  //     this.columnValues.shift();\n  //   }\n  // }\n\n  private updateResultsHis(newResult: number): void {\n    this.columnValues.push(newResult);\n    \n    if (this.columnValues.length > 21) {\n        this.columnValues.shift();\n        // Sau khi xóa phần tử đầu tiên ra khỏi mảng, cập nhật lại đường nối và xóa các đường nối cũ\n        this.updateConnections();\n    }\n}\n\n  private updateResultsHistory(newResult: number): void {\n    this.resultsHistory.push(newResult);\n    if (this.resultsHistory.length > 100) {\n      this.resultsHistory.shift();\n    }\n  }\n\n  private chatAppear() {\n    this.Chat.active = true;\n    this.unchat.active = true;\n    tween(this.Table)\n      .to(0.3, {\n        position: new Vec3(this.Table.position.x - 130, this.Table.position.y),\n      })\n      .start();\n\n    tween(this.Chat)\n      .to(0.3, {\n        position: new Vec3(this.Chat.position.x - 300, this.Chat.position.y),\n      })\n      .start();\n  }\n\n  private chatUnAppear() {\n    this.Chat.active = false;\n    this.unchat.active = false;\n\n    tween(this.Table)\n      .to(0.3, {\n        position: new Vec3(this.Table.position.x + 130, this.Table.position.y),\n      })\n      .start();\n\n    tween(this.Chat)\n      .to(0.3, {\n        position: new Vec3(this.Chat.position.x + 300, this.Chat.position.y),\n      })\n      .start();\n  }\n\n  // private onDestroy() {\n  //   // Hủy lắng nghe sự kiện bàn phím khi scene bị hủy\n  //   input.off(Input.EventType.KEY_DOWN, this.onKeyDown, this);\n  // }\n\n  onKeyDown(event: EventKeyboard) {\n    if (this.editBoxChat && event.keyCode === KeyCode.ENTER) {\n\n      const message = this.editBoxChat.string;\n      this.handleChatMessage(message);\n      // Xóa nội dung trong EditBox sau khi gửi tin nhắn\n      this.editBoxChat.string = \"\";\n    }\n  }\n\n  handleChatMessage(message: string) {\n    console.log(\"Received message:\", message);\n  }\n\n  private introduceBoardActive(){\n    console.log(\"aaaa\");\n    \n    this.introduceBoard.active=true;\n  }\n\n  private introduceBoardUnActive(){\n    this.introduceBoard.active=false;\n  }\n\n  private historyNodeActive(){\n    this.HistoryNode.active=true;\n  }\n\n  private historyNodeUnActive(){\n    this.HistoryNode.active=false;\n  }\n\n  private createNodeHistory() {\n  let gapBetweenColumns = this.columnWidth * 1.5;\n  \n  let lineContainer = new Node();\n  lineContainer.parent = this.LineNode;\n\n  let graphics = lineContainer.addComponent(Graphics);\n  graphics.lineWidth = 10; \n  graphics.strokeColor = new Color(255, 0, 0);\n  let prevColumnNode: Node = null; \n    this.NumberNodesResultHistory.forEach((node, index) => {\n      const value = this.columnValues[index];\n      if (value !== undefined) {\n          if (value > 0&&value<10) {\n            node.setPosition(value * gapBetweenColumns*0.22,node.position.y)\n\n          } else if (value >= 10) {\n            node.setPosition(value * gapBetweenColumns*0.22,node.position.y)\n          } else {\n            console.error(\"Invalid result value:\", value);\n            node.active = false; // Ẩn node ảnh nếu giá trị không hợp lệ\n            return;\n          }\n          node.active = true; // Kích hoạt node ảnh\n          if (prevColumnNode) {\n            graphics.moveTo(prevColumnNode.position.x, prevColumnNode.position.y);\n            graphics.lineTo(node.position.x, node.position.y);\n            graphics.stroke();\n        }\n        prevColumnNode = node;\n       \n      } else {\n        node.active = false; // Ẩn node ảnh nếu giá trị không tồn tại\n      }\n    });\n}\n\n// private createNodeHistory() {\n//   let gapBetweenColumns = this.columnWidth * 1.5;\n\n//   let lineContainer = new Node();\n//   lineContainer.parent = this.LineNode;\n\n//   let graphics = lineContainer.addComponent(Graphics);\n//   graphics.lineWidth = 10; \n//   graphics.strokeColor = new Color(255, 0, 0);\n//   let prevColumnNode: Node = null; \n\n//   this.NumberNodesResultHistory.forEach((node, index) => {\n//       const value = this.columnValues[index];\n//       if (value !== undefined) {\n//           // Kiểm tra xem giá trị có nằm trong khoảng từ 1 đến 9 hay không\n//           if (value > 0 && value < 10) {\n//               node.setPosition(value * gapBetweenColumns * 0.22, index * gapBetweenColumns);\n//           } else if (value >= 10) {\n//               node.setPosition(value * gapBetweenColumns * 0.22, index * gapBetweenColumns);\n//           } else {\n//               console.error(\"Invalid result value:\", value);\n//               node.active = false; // Ẩn node ảnh nếu giá trị không hợp lệ\n//               return;\n//           }\n//           node.active = true; // Kích hoạt node ảnh\n\n//           // Vẽ đường nối từ node trước đó đến node hiện tại\n//           if (prevColumnNode) {\n//               graphics.moveTo(prevColumnNode.position.x, prevColumnNode.position.y);\n//               graphics.lineTo(node.position.x, node.position.y);\n//               graphics.stroke();\n//           }\n//           prevColumnNode = node;\n//       } else {\n//           node.active = false; // Ẩn node ảnh nếu giá trị không tồn tại\n//       }\n//   });\n// }\n\n  createColumn(columnValue: number): Node {\n    let columnNode = instantiate(this.black);\n    return columnNode;\n}\n\nprivate updateConnections(): void {\n  // Xóa toàn bộ đường nối cũ\n  this.clearOldConnections();\n\n  // Vẽ lại đường nối\n  // this.drawConnections();\n}\n\nprivate clearOldConnections(): void {\n  // Lặp qua mảng các đối tượng Graphics và xóa chúng khỏi node\n  this.lineGraphicsArray.forEach(graphics => {\n      graphics.node.destroy();\n  });\n  // Xóa toàn bộ phần tử trong mảng\n  this.lineGraphicsArray = [];\n}\n}\n"]}