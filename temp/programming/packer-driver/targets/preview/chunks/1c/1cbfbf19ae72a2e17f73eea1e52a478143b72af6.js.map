{"version":3,"sources":["file:///Users/waostudio/Desktop/tx2/assets/Scripts/GameController.ts"],"names":["_decorator","Button","Component","Label","Node","tween","Vec3","Animation","SpriteFrame","Sprite","EditBox","instantiate","Prefab","Graphics","Color","AudioController","ccclass","property","GameC","type","totalUserBetUnder","totalUserBetOver","totalBetOver","totalBetUnder","listScore","listValueDice","listSprite","listButton","checkUnder","checkOver","gameEnd","checkEditFocus","shedu","nextRoll","timeRate","valueDice","balanceUser","cloneBalanUser","userValuebetUnder","cloneuserValuebetUnder","cloneuserValuebetOver","userValuebetOver","countdownTimerBet","countdownTimerResult","columnWidth","sum","countPlayerOver","countPlayerUnder","clonetotalUserBetUnder","clonetotalUserBetOver","checkouChat","results","columnValues","resultsHistory","ListDice1His","ListDice2His","ListDice3His","ramdomDice","loggedInUsername","offMusic","numPrefabsCreated","lineGraphicsArray","numRows","numCols","cellSize","grid","start","window","userInfo","getUsernameAndBalanceFromLocalStorage","username","string","balance","onAudio","value1k","value10k","value50k","value100k","value500k","value10M","value50M","button","i","node","on","EventType","CLICK","addScore","console","log","length","schedule","totalOverText","formatNumberWithCommas","countPlayerOverLb","toString","to","scale","call","totalUnderText","countPlayerUnderLb","setTimeout","plate","getComponent","play","Effect1","countDown","active","Effect3","displayImagesResult","displayImagesResultHistory","startCountdown","scheduleRandomDice","createNodeHistory","createNodeDice1History","createNodeDice2History","createNodeDice3History","createGrid","col","Math","floor","row","prevRowPrefabType","prefabType","Under","Over","cell","name","nextCol","nextRow","parent","pref","setPosition","push","Score","UnderLableValueUser","OverLableValueUser","bet","isUpdated","setUsernameAndBalanceToLocalStorage","randomValues","getRandomValues","displayImages","ToatalDice","dickAnimationFinished","displayImagesHisDice","sumValues","Effect2","startCountdownResult","tkpOver","formatNumberWithCommas2","tkpUserOver","tkpUserUnder","tkpTime","currentTime","countDownResult","FINISHED","off","updateResults","updateResultsHistory","updateResultsHis","updateResultsDice1History","updateResultsDice2History","updateResultsDice3History","EffectUnder","Effect","indices","randomIndex","random","array","reduce","currentValue","forEach","value","index","spriteFrame","dice1","sprite","imageNodes","error","diceHis","imageNodesDiceRes","imageNodesResult","undefined","listSpriteResult","imageNodesResultHistory","listSpriteResultHistory","timeCountDown","timereset","countdownInterval","setInterval","clearInterval","newResult","shift","clearLineNode","LineNode","LineNodeDice1","LineNodeDice2","LineNodeDice3","chatAppear","Table","position","x","y","Chat","logo1","logo2","unchat","chatUnAppear","handleEvent","LableChat","editBoxChat","introduceBoardActive","introduceBoard","introduceBoardUnActive","historyNodeActive","HistoryNode","historyNodeUnActive","gapBetweenColumns","lineContainer","graphics","addComponent","lineWidth","strokeColor","prevColumnNode","NumberNodesResultHistory","listSpritetNumberHistory","moveTo","lineTo","stroke","ListDice1Node","ListDice2Node","ListDice3Node","createColumn","columnValue","columnNode","black","removeAllChildren","warn","unDice1","unDice1His","Dice1Hist","ActiveDice1","unDice2","unDice2His","Dice2Hist","ActiveDice2","unDice3","unDice3His","Dice3ist","ActiveDice3","activePage","page1His","page2His","page2Button1","page2Button2","Dice1His","Dice2His","Dice3His","activePage2","CancelBet","HistoryUserBetActiveH","HistoryUserBet","HistoryUserBetUnable","HistoryUserActiveH","HistoryUser","HistoryUserUnable","doubleBet","winRate","Winrate","winRateUn","storedAccounts","localStorage","getItem","registeredAccounts","JSON","parse","account","find","acc","newBalance","findIndex","setItem","stringify","number","replace","toFixed","Date","hour","getHours","minute","getMinutes","second","getSeconds","buttonMusicb","buttonMusic","settingAudio"],"mappings":"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","sourcesContent":["import {\n  _decorator,\n  Button,\n  Component,\n  Label,\n  math,\n  Node,\n  tween,\n  Vec3,\n  Animation,\n  SpriteFrame,\n  Sprite,\n  input,\n  Input,\n  macro,\n  EditBox,\n  NodeEventType,\n  EventKeyboard,\n  KeyCode,\n  instantiate,\n  Prefab,\n  Graphics,\n  Color,\n  SystemEvent,\n  Event,\n  log,\n  director,\n} from \"cc\";\nimport { AudioController } from \"./Audio/AudioController\";\n\nconst { ccclass, property } = _decorator;\n\ninterface SceneParams {\n  username: string;\n}\n\ninterface AccountInfo {\n  username: string;\n  password: string;\n  balance: number; // Thêm trường balance\n}\n\n@ccclass(\"GameC\")\nexport class GameC extends Component {\n  @property({\n    type: Node,\n  })\n  private betOverNode: Node;\n  @property({\n    type: Node,\n  })\n  private betUnderNode: Node;\n  @property({\n    type: Node,\n  })\n  private betBarNode: Node;\n\n  @property({\n    type: Node,\n  })\n  private plate: Node;\n\n  @property({\n    type: Node,\n  })\n  private Effect: Node;\n\n  @property({\n    type: Node,\n  })\n  private EffectUnder: Node;\n\n  @property({\n    type: Node,\n  })\n  private Chat: Node;\n\n  @property({\n    type: Node,\n  })\n  private Table: Node;\n\n  @property({\n    type: Node,\n  })\n  private unchat: Node;\n\n  @property({\n    type: Node,\n  })\n  private introduceBoard: Node;\n\n  @property({\n    type: Node,\n  })\n  private HistoryNode: Node;\n\n  @property({\n    type: Prefab,\n  })\n  private black: Prefab;\n\n  @property({\n    type: Node,\n  })\n  private numberHis: Node;\n\n  @property({\n    type: Node,\n  })\n  private LineNode: Node;\n\n  @property({\n    type: Node,\n  })\n  private LineNodeDice1: Node;\n\n  @property({\n    type: Node,\n  })\n  private Winrate: Node;\n\n  @property({\n    type: Node,\n  })\n  private LineNodeDice2: Node;\n\n  @property({\n    type: Node,\n  })\n  private LineNodeDice3: Node;\n\n  @property({\n    type: Node,\n  })\n  private Dice1Hist: Node;\n\n  @property({\n    type: Node,\n  })\n  private Dice2Hist: Node;\n\n  @property({\n    type: Node,\n  })\n  private Dice3ist: Node;\n\n  @property({\n    type: Node,\n  })\n  private page1His: Node;\n\n  @property({\n    type: Node,\n  })\n  private page2His: Node;\n\n  @property({\n    type: Node,\n  })\n  private Dice1His: Node;\n\n  @property({\n    type: Node,\n  })\n  private Dice2His: Node;\n\n  @property({\n    type: Node,\n  })\n  private Dice3His: Node;\n\n  @property({\n    type: Node,\n  })\n  private HistoryUserBet: Node;\n\n  @property({\n    type: Node,\n  })\n  private HistoryUser: Node;\n\n  @property({\n    type: Node,\n  })\n  private logo1: Node;\n\n  @property({\n    type: Node,\n  })\n  private logo2: Node;\n\n  @property({\n    type: Node,\n  })\n  private buttonMusic: Node;\n\n  //Lable\n  @property({\n    type: Label,\n  })\n  private UnderLableValueUser: Label;\n\n  @property({\n    type: Label,\n  })\n  private OverLableValueUser: Label;\n\n  @property({\n    type: Label,\n  })\n  private totalUnderText: Label;\n\n  @property({\n    type: Label,\n  })\n  private totalOverText: Label;\n  @property({\n    type: Label,\n  })\n  private countDown: Label;\n\n  @property({\n    type: Label,\n  })\n  private countDownResult: Label;\n\n  @property({\n    type: Label,\n  })\n  private countPlayerOverLb: Label;\n\n  @property({\n    type: Label,\n  })\n  private countPlayerUnderLb: Label;\n\n  @property({\n    type: Label,\n  })\n  private BalanceNumber: Label;\n\n  @property({\n    type: Label,\n  })\n  private ToatalDice: Label;\n\n  @property({\n    type: Label,\n  })\n  private username: Label;\n\n  @property({\n    type: Label,\n  })\n  private tkpOver: Label;\n\n  @property({\n    type: Label,\n  })\n  private tkpUnder: Label;\n\n  @property({\n    type: Label,\n  })\n  private tkpUserUnder: Label;\n\n  @property({\n    type: Label,\n  })\n  private tkpUserOver: Label;\n\n  //BUTTON\n  @property({\n    type: Button,\n  })\n  value1k: Button;\n  @property({\n    type: Button,\n  })\n  value10k: Button;\n  @property({\n    type: Button,\n  })\n  value50k: Button;\n  @property({\n    type: Button,\n  })\n  value100k: Button;\n  @property({\n    type: Button,\n  })\n  value500k: Button;\n\n  @property({\n    type: Button,\n  })\n  value10M: Button;\n\n  @property({\n    type: Button,\n  })\n  private value50M: Button;\n\n  @property({\n    type: Button,\n  })\n  private unDice1His: Button;\n\n  @property({\n    type: Button,\n  })\n  private unDice2His: Button;\n\n  @property({\n    type: Button,\n  })\n  private unDice3His: Button;\n\n  @property({\n    type: Button,\n  })\n  private page2Button1: Button;\n\n  @property({\n    type: Button,\n  })\n  private page2Button2: Button;\n\n  @property({\n    type: SpriteFrame,\n  })\n  private dice1: SpriteFrame[] = [];\n\n  @property({\n    type: SpriteFrame,\n  })\n  private diceHis: SpriteFrame[] = [];\n\n  @property({\n    type: Label,\n  })\n  private tkpTime: Label[] = [];\n\n  @property({ type: [Node] })\n  imageNodes: Node[] = [];\n\n  @property({ type: [Node] })\n  imageNodesDiceRes: Node[] = [];\n\n  @property({ type: [Node] })\n  imageNodesResult: Node[] = [];\n\n  @property({ type: [Node] })\n  imageNodesResultHistory: Node[] = [];\n\n  @property({ type: [Node] })\n  NumberNodesResultHistory: Node[] = [];\n\n  @property({ type: [Node] })\n  ListDice1Node: Node[] = [];\n\n  @property({ type: [Node] })\n  ListDice2Node: Node[] = [];\n\n  @property({ type: [Node] })\n  ListDice3Node: Node[] = [];\n\n  @property({ type: [Label] })\n  LableChat: Label[] = [];\n\n  @property({\n    type: SpriteFrame,\n  })\n  private listSpriteResult: SpriteFrame[] = [];\n\n  @property({\n    type: SpriteFrame,\n  })\n  private listSpriteResultHistory: SpriteFrame[] = [];\n\n  @property({\n    type: SpriteFrame,\n  })\n  private listSpritetNumberHistory: SpriteFrame[] = [];\n\n  @property({\n    type: EditBox,\n  })\n  private editBoxChat: EditBox;\n\n  @property({\n    type: Node,\n  })\n  private Effect1: Node;\n\n  @property({\n    type: Node,\n  })\n  private Effect2: Node;\n\n  @property({\n    type: Node,\n  })\n  private Effect3: Node;\n\n  @property({\n    type: AudioController,\n  })\n  private AudioController: AudioController;\n\n  private totalUserBetUnder: number = 0;\n  private totalUserBetOver: number = 0;\n  private totalBetOver: number = 0;\n  private totalBetUnder: number = 0;\n  private listScore: number[] = [\n    1000, 10000, 50000, 100000, 500000, 10000000, 50000000,\n  ];\n  private listValueDice: number[] = [1, 2, 3, 4, 5, 6];\n\n  private listSprite: SpriteFrame[] = [];\n  private listButton: Button[] = [];\n  private checkUnder: boolean = false;\n  private checkOver: boolean = false;\n  private gameEnd: boolean = true;\n  private checkEditFocus: boolean = false;\n  private shedu = null;\n  private nextRoll: number = 500;\n  private timeRate: number = 5000;\n  private valueDice: number = 0;\n  private balanceUser: number = 50000;\n  private cloneBalanUser: number = 50000;\n  private userValuebetUnder: number = 0;\n  private cloneuserValuebetUnder: number = 0;\n  private cloneuserValuebetOver: number = 0;\n  private userValuebetOver: number = 0;\n  private countdownTimerBet: number = 40;\n  private countdownTimerResult: number = 15;\n\n  // columnCount: number = 21;\n  private columnWidth: number = 34.5;\n  private sum: number = 0;\n  private countPlayerOver: number = 0;\n  private countPlayerUnder: number = 0;\n  private clonetotalUserBetUnder: number = 0;\n  private clonetotalUserBetOver: number = 0;\n  private checkouChat: number = 0;\n\n  private results: number[] = [];\n  private columnValues: number[] = [];\n  private resultsHistory: number[] = [];\n  private ListDice1His: number[] = [];\n  private ListDice2His: number[] = [];\n  private ListDice3His: number[] = [];\n  private ramdomDice: number[] = [];\n  private loggedInUsername;\n  private offMusic: boolean = true;\n  numPrefabsCreated = 0;\n\n  private lineGraphicsArray: Graphics[] = [];\n\n  @property(Node)\n  pref: Node;\n\n  @property(Prefab)\n  private Over: Prefab = null;\n\n  @property(Prefab)\n  private Under: Prefab = null;\n\n  private numRows: number = 6;\n  private numCols: number = 20;\n  private cellSize: number = 50; // Kích thước mỗi ô\n  private grid: Node[][] = [];\n  start() {\n    this.loggedInUsername = window[\"loggedInUsername\"];\n    const userInfo = this.getUsernameAndBalanceFromLocalStorage(\n      this.loggedInUsername\n    );\n    if (userInfo) {\n      this.username.string = userInfo.username;\n      this.balanceUser = userInfo.balance;\n    }\n    this.AudioController.onAudio(2);\n\n    // this.createGrid();\n\n    this.listButton = [\n      this.value1k,\n      this.value10k,\n      this.value50k,\n      this.value100k,\n      this.value500k,\n      this.value10M,\n      this.value50M,\n    ];\n    for (let i = 0; i < this.listButton.length; i++) {\n      let button = this.listButton[i];\n      button.node.on(Button.EventType.CLICK, () => {\n        if (\n          this.cloneBalanUser >= this.listScore[i] &&\n          this.cloneBalanUser >\n            this.totalUserBetOver + this.totalUserBetUnder &&\n          this.balanceUser !== 0 &&\n          this.gameEnd === false\n        ) {\n          this.addScore(this.listScore[i]);\n        } else {\n          console.log(\"khong du tien\");\n        }\n      });\n    }\n\n    this.shedu = this.schedule(() => {\n      this.totalOverText.string = this.formatNumberWithCommas(\n        this.totalBetOver\n      );\n      this.countPlayerOverLb.string = this.countPlayerOver.toString();\n      tween(this.totalOverText.node)\n        .to(0.5, { scale: new Vec3(1.5, 1.5) })\n        .call(() => {\n          tween(this.totalOverText.node)\n            .to(0.5, { scale: new Vec3(1, 1) })\n            .start();\n        })\n        .start();\n    }, 1);\n\n    this.schedule(() => {\n      // this.totalUnderText.string = this.totalBetUnder.toString();\n      this.totalUnderText.string = this.formatNumberWithCommas(\n        this.totalBetUnder\n      );\n      this.countPlayerUnderLb.string = this.countPlayerUnder.toString();\n      tween(this.totalUnderText.node)\n        .to(0.5, { scale: new Vec3(1.5, 1.5) })\n        .call(() => {\n          tween(this.totalUnderText.node)\n            .to(0.5, { scale: new Vec3(1, 1) })\n            .start();\n        })\n        .start();\n    }, 1);\n\n    setTimeout(() => {\n      this.gameEnd = false;\n      this.plate.getComponent(Animation).play(\"plateIn\");\n      this.AudioController.onAudio(3);\n      this.Effect1.getComponent(Animation).play();\n      this.countDown.node.active = true;\n      this.Effect3.active = false;\n      // this.Effect2.active = true;\n      this.displayImagesResult();\n      this.displayImagesResultHistory();\n      this.startCountdown(this.countdownTimerBet, 40);\n      this.scheduleRandomDice();\n      this.createNodeHistory();\n      this.createNodeDice1History();\n      this.createNodeDice2History();\n      this.createNodeDice3History();\n    }, 3000);\n\n    // this.handleEvent();\n    // input.on(Input.EventType.KEY_DOWN,this.onKeyDown,this);\n  }\n\n  //   createGrid() {\n  //     if (this.numPrefabsCreated >= this.numRows * this.numCols) {\n  //         return;\n  //     }\n  //     const col = Math.floor(this.numPrefabsCreated / this.numRows);\n  //     const row = this.numPrefabsCreated % this.numRows;\n\n  //     if (!this.grid[row]) {\n  //         this.grid[row] = [];\n  //     }\n\n  //     let prefabType = (this.sum <= 10) ? this.Under : this.Over;\n  //     const cell = instantiate(prefabType);\n  //     cell.parent = this.pref;\n  //     cell.setPosition(new Vec3(col * this.cellSize, (this.numRows - 1 - row) * this.cellSize, 0));\n  //     this.grid[row].push(cell);\n  //     this.numPrefabsCreated++;\n\n  //     if (col === this.numCols - 1) {\n  //         this.numPrefabsCreated += this.numRows - 1;\n  //     }\n  // }\n\n  // createGrid() {\n  //   if (this.numPrefabsCreated >= this.numRows * this.numCols) {\n  //     return;\n  //   }\n  //   let col = Math.floor(this.numPrefabsCreated / this.numRows);\n  //   let row = this.numPrefabsCreated % this.numRows;\n\n  //   if (!this.grid[row]) {\n  //     this.grid[row] = [];\n  //   }\n\n  //   let prevRowPrefabType = null;\n  //   let prefabType = this.sum <= 10 ? this.Under : this.Over;\n\n  //   if (row > 0) {\n  //     if (row > 0 && this.grid[row - 1] && this.grid[row - 1][col]) {\n  //       prevRowPrefabType = this.grid[row - 1][col];\n  //     } // Lưu loại prefab của hàng trước đó\n  //   }\n\n  //   const cell = instantiate(prefabType);\n\n  //   // Kiểm tra xem prefab không phải là prefab đầu tiên trong cột\n  //   if (prevRowPrefabType && prefabType.name !== prevRowPrefabType.name) {\n  //     console.log(\"aaa\");\n\n  //     const nextCol = col + 1;\n  //     const nextRow = 0;\n  //     cell.parent = this.pref;\n  //     cell.setPosition(\n  //       new Vec3(\n  //         nextCol * this.cellSize,\n  //         (this.numRows - 1 - nextRow) * this.cellSize,\n  //         0\n  //       )\n  //     );\n  //     if (!this.grid[nextRow]) {\n  //       this.grid[nextRow] = [];\n  //     }\n  //     this.grid[nextRow].push(cell);\n  //     this.numPrefabsCreated++;\n  //   } else {\n  //     cell.parent = this.pref;\n  //     cell.setPosition(\n  //       new Vec3(\n  //         col * this.cellSize,\n  //         (this.numRows - 1 - row) * this.cellSize,\n  //         0\n  //       )\n  //     );\n  //   }\n\n  //   this.grid[row].push(cell);\n  //   this.numPrefabsCreated++;\n\n  //   if (col === this.numCols - 1) {\n  //     // Cập nhật lại giá trị của numPrefabsCreated để bắt đầu từ cột mới\n  //     this.numPrefabsCreated += this.numRows - 1;\n  //   }\n  // }\n  createGrid() {\n    if (this.numPrefabsCreated >= this.numRows * this.numCols) {\n      return;\n    }\n\n    let col = Math.floor(this.numPrefabsCreated / this.numRows);\n    let row = this.numPrefabsCreated % this.numRows;\n\n    if (!this.grid[row]) {\n      this.grid[row] = [];\n    }\n\n    let prevRowPrefabType = null;\n    let prefabType = this.sum <= 10 ? this.Under : this.Over;\n    if (row > 0 && this.grid[row - 1] && this.grid[row - 1][col]) {\n      console.log(\"aaaa\");\n      console.log(this.grid[row - 1][col]);\n\n      prevRowPrefabType = this.grid[row - 1][col];\n    } // Lưu loại prefab của hàng trước đó\n\n    const cell = instantiate(prefabType);\n\n    // Kiểm tra xem prefab không phải là prefab đầu tiên trong cột\n    console.log(prevRowPrefabType);\n    console.log(prefabType.name);\n\n    if (\n      row > 0 &&\n      prevRowPrefabType &&\n      prefabType.name !== prevRowPrefabType.name\n    ) {\n      const nextCol = col + 1;\n      const nextRow = 0;\n      cell.parent = this.pref;\n      cell.setPosition(\n        new Vec3(\n          nextCol * this.cellSize,\n          (this.numRows - 1 - nextRow) * this.cellSize,\n          0\n        )\n      );\n      if (!this.grid[nextRow]) {\n        this.grid[nextRow] = [];\n      }\n      this.grid[nextRow].push(cell);\n\n      // Cập nhật numPrefabsCreated cho cột và hàng mới\n      this.numPrefabsCreated = nextCol * this.numRows + nextRow;\n    } else {\n      cell.parent = this.pref;\n      cell.setPosition(\n        new Vec3(\n          col * this.cellSize,\n          (this.numRows - 1 - row) * this.cellSize,\n          0\n        )\n      );\n    }\n    console.log(this.numPrefabsCreated);\n\n    this.grid[row].push(cell);\n    this.numPrefabsCreated++;\n\n    if (col === this.numCols - 1) {\n      // Cập nhật lại giá trị của numPrefabsCreated để bắt đầu từ cột mới\n      this.numPrefabsCreated += this.numRows - 1;\n    }\n  }\n\n  private addScore(Score: number) {\n    if (this.checkUnder === true) {\n      this.totalUserBetUnder = this.totalUserBetUnder + Score;\n      this.cloneuserValuebetUnder = 0;\n      this.clonetotalUserBetUnder = this.clonetotalUserBetUnder + Score;\n      this.UnderLableValueUser.string = this.totalUserBetUnder.toString();\n    }\n    if (this.checkOver === true) {\n      this.totalUserBetOver = this.totalUserBetOver + Score;\n      this.cloneuserValuebetOver = 0;\n      this.clonetotalUserBetOver = this.clonetotalUserBetOver + Score;\n      this.OverLableValueUser.string = this.totalUserBetOver.toString();\n    }\n  }\n\n  private bet() {\n    if (\n      this.checkOver === true &&\n      this.cloneBalanUser >= this.totalUserBetOver &&\n      this.balanceUser !== 0 &&\n      this.gameEnd === false\n    ) {\n      this.balanceUser = this.balanceUser - this.clonetotalUserBetOver;\n\n      const isUpdated = this.setUsernameAndBalanceToLocalStorage(\n        this.loggedInUsername,\n        this.balanceUser\n      );\n      if (isUpdated) {\n        console.log(\"Cập nhật balance thành công!\");\n      } else {\n        console.log(\"Cập nhật balance thất bại!\");\n      }\n\n      this.userValuebetOver += this.clonetotalUserBetOver;\n      this.clonetotalUserBetOver = 0;\n      this.OverLableValueUser.string = this.totalUserBetOver.toString();\n      this.AudioController.onAudio(0);\n    } else if (\n      this.checkUnder === true &&\n      this.cloneBalanUser >= this.totalUserBetUnder &&\n      this.balanceUser !== 0 &&\n      this.gameEnd === false\n    ) {\n      this.balanceUser = this.balanceUser - this.clonetotalUserBetUnder;\n\n      const isUpdated = this.setUsernameAndBalanceToLocalStorage(\n        this.loggedInUsername,\n        this.balanceUser\n      );\n      if (isUpdated) {\n        console.log(\"Cập nhật balance thành công!\");\n      } else {\n        console.log(\"Cập nhật balance thất bại!\");\n      }\n\n      this.userValuebetUnder += this.clonetotalUserBetUnder;\n      this.clonetotalUserBetUnder = 0;\n      this.UnderLableValueUser.string = this.totalUserBetUnder.toString();\n      this.AudioController.onAudio(0);\n    } else {\n      console.log(\"nghèo\");\n    }\n  }\n\n  private scheduleRandomDice() {\n    const randomValues = this.getRandomValues();\n    this.displayImages(randomValues);\n    // this.displayImagesHisDice(randomValues);\n    // this.sum = this.sumValues(randomValues);\n    this.ToatalDice.string = this.sum.toString();\n    let dickAnimationFinished = false;\n    setTimeout(() => {\n      this.gameEnd = true;\n      this.displayImagesHisDice(randomValues);\n      this.sum = this.sumValues(randomValues);\n      this.plate.getComponent(Animation).play(\"Dick\");\n      this.AudioController.onAudio(4);\n      this.Effect2.active = true;\n      this.startCountdownResult(this.countdownTimerResult, 15);\n      this.tkpOver.string = this.formatNumberWithCommas2(this.totalBetOver);\n      this.tkpUserOver.string = this.countPlayerOver.toString();\n      this.tkpUserUnder.string = this.countPlayerUnder.toString();\n      for (let i = 0; i < this.tkpTime.length; i++) {\n        this.tkpTime[i].string = this.currentTime();\n      }\n      this.countDown.node.active = false;\n      this.countDownResult.node.active = true;\n\n      this.plate\n        .getComponent(Animation)\n        .on(Animation.EventType.FINISHED, () => {\n          dickAnimationFinished = true;\n          this.plate.active = false;\n\n          this.plate.getComponent(Animation).off(Animation.EventType.FINISHED);\n\n          if (this.sum < 10) {\n            // this.createGrid();\n            this.updateResults(0);\n            this.displayImagesResult();\n            this.updateResultsHistory(0);\n            this.displayImagesResultHistory();\n\n            this.updateResultsHis(this.sum);\n            this.createNodeHistory();\n\n            this.updateResultsDice1History(this.ramdomDice[0]);\n            this.createNodeDice1History();\n\n            this.updateResultsDice2History(this.ramdomDice[1]);\n            this.createNodeDice2History();\n\n            this.updateResultsDice3History(this.ramdomDice[2]);\n            this.createNodeDice3History();\n\n            this.EffectUnder.active = true;\n            this.balanceUser += this.userValuebetUnder * 2;\n\n            const isUpdated = this.setUsernameAndBalanceToLocalStorage(\n              this.loggedInUsername,\n              this.balanceUser\n            );\n            if (isUpdated) {\n              console.log(\"Cập nhật balance thành công!\");\n            } else {\n              console.log(\"Cập nhật balance thất bại!\");\n            }\n          } else {\n            // this.createGrid();\n            this.updateResults(1);\n            this.displayImagesResult();\n            this.updateResultsHistory(1);\n            this.displayImagesResultHistory();\n\n            this.updateResultsHis(this.sum);\n            this.createNodeHistory();\n\n            this.updateResultsDice1History(this.ramdomDice[0]);\n            this.createNodeDice1History();\n\n            this.updateResultsDice2History(this.ramdomDice[1]);\n            this.createNodeDice2History();\n\n            this.updateResultsDice3History(this.ramdomDice[2]);\n            this.createNodeDice3History();\n\n            this.Effect.active = true;\n            this.balanceUser += this.userValuebetOver * 2;\n\n            const isUpdated = this.setUsernameAndBalanceToLocalStorage(\n              this.loggedInUsername,\n              this.balanceUser\n            );\n            if (isUpdated) {\n              console.log(\"Cập nhật balance thành công!\");\n            } else {\n              console.log(\"Cập nhật balance thất bại!\");\n            }\n          }\n        });\n\n      setTimeout(() => {\n        this.countDownResult.node.active = false;\n        if (dickAnimationFinished) {\n          // this.plate.active = true;\n          if (this.EffectUnder.active === true) {\n            this.EffectUnder.active = false;\n          }\n          if (this.Effect.active === true) {\n            this.Effect.active = false;\n          }\n          this.totalBetOver = 0;\n          this.totalBetUnder = 0;\n          this.countPlayerOver = 0;\n          this.countPlayerUnder = 0;\n          this.totalUserBetOver = 0;\n          this.totalUserBetUnder = 0;\n          this.userValuebetOver = 0;\n          this.userValuebetUnder = 0;\n\n          this.AudioController.onAudio(2);\n\n          this.UnderLableValueUser.string = this.totalUserBetUnder.toString();\n          this.OverLableValueUser.string = this.totalUserBetOver.toString();\n          this.cloneBalanUser = this.balanceUser;\n          this.Effect2.active = false;\n          this.Effect3.active = true;\n          setTimeout(() => {\n            this.plate.active = true;\n            this.plate.getComponent(Animation).play(\"plateIn\");\n            this.AudioController.onAudio(3);\n            this.Effect1.getComponent(Animation).play();\n            this.Effect3.active = false;\n            this.countDown.node.active = true;\n            this.gameEnd = false;\n            this.startCountdown(this.countdownTimerBet, 40);\n            this.scheduleRandomDice();\n          }, 3000);\n        } else {\n          this.scheduleRandomDice();\n        }\n      }, 15000);\n    }, 40000);\n  }\n  private getRandomValues() {\n    const indices = [1, 2, 3, 4, 5, 6];\n    this.ramdomDice = [];\n    for (let i = 0; i < 3; i++) {\n      const randomIndex = Math.floor(Math.random() * indices.length);\n      this.ramdomDice.push(indices[randomIndex]);\n    }\n    return this.ramdomDice;\n  }\n\n  private sumValues(array) {\n    return array.reduce((sum, currentValue) => sum + currentValue, 0);\n  }\n\n  private displayImages(randomValues) {\n    randomValues.forEach((value, index) => {\n      const spriteFrame = this.dice1[value - 1];\n      const sprite = this.imageNodes[index].getComponent(Sprite);\n      if (sprite && spriteFrame) {\n        sprite.spriteFrame = spriteFrame;\n      } else {\n        console.error(\"Sprite or SpriteFrame is missing!\");\n      }\n    });\n  }\n\n  private displayImagesHisDice(randomValues) {\n    randomValues.forEach((value, index) => {\n      const spriteFrame = this.diceHis[value - 1];\n      const sprite = this.imageNodesDiceRes[index].getComponent(Sprite);\n      if (sprite && spriteFrame) {\n        sprite.spriteFrame = spriteFrame;\n      } else {\n        console.error(\"Sprite or SpriteFrame is missing!\");\n      }\n    });\n  }\n\n  private displayImagesResult() {\n    this.imageNodesResult.forEach((node, index) => {\n      const value = this.results[index];\n      if (value !== undefined) {\n        // Kiểm tra xem giá trị có tồn tại hay không\n        const sprite = node.getComponent(Sprite);\n        if (sprite) {\n          let spriteFrame;\n          if (value === 0) {\n            spriteFrame = this.listSpriteResult[0]; // Thay spriteFrameA bằng spriteFrame bạn muốn gán cho giá trị 0\n          } else if (value === 1) {\n            spriteFrame = this.listSpriteResult[1]; // Thay spriteFrameB bằng spriteFrame bạn muốn gán cho giá trị 1\n          } else {\n            console.error(\"Invalid result value:\", value);\n            node.active = false; // Ẩn node ảnh nếu giá trị không hợp lệ\n            return;\n          }\n          sprite.spriteFrame = spriteFrame;\n          node.active = true; // Kích hoạt node ảnh\n        } else {\n          console.error(\"Sprite is missing!\");\n        }\n      } else {\n        node.active = false; // Ẩn node ảnh nếu giá trị không tồn tại\n      }\n    });\n  }\n\n  private displayImagesResultHistory() {\n    this.imageNodesResultHistory.forEach((node, index) => {\n      const value = this.resultsHistory[index];\n      if (value !== undefined) {\n        // Kiểm tra xem giá trị có tồn tại hay không\n        const sprite = node.getComponent(Sprite);\n        if (sprite) {\n          let spriteFrame;\n          if (value === 0) {\n            spriteFrame = this.listSpriteResultHistory[0]; // Thay spriteFrameA bằng spriteFrame bạn muốn gán cho giá trị 0\n          } else if (value === 1) {\n            spriteFrame = this.listSpriteResultHistory[1]; // Thay spriteFrameB bằng spriteFrame bạn muốn gán cho giá trị 1\n          } else {\n            console.error(\"Invalid result value:\", value);\n            node.active = false; // Ẩn node ảnh nếu giá trị không hợp lệ\n            return;\n          }\n          sprite.spriteFrame = spriteFrame;\n          node.active = true; // Kích hoạt node ảnh\n        } else {\n          console.error(\"Sprite is missing!\");\n        }\n      } else {\n        node.active = false; // Ẩn node ảnh nếu giá trị không tồn tại\n      }\n    });\n  }\n\n  private startCountdownResult(timeCountDown: number, timereset: number) {\n    this.countdownTimerResult = 15;\n    const countdownInterval = setInterval(() => {\n      this.countdownTimerResult--;\n      if (this.countdownTimerResult <= 0) {\n        clearInterval(countdownInterval);\n      }\n    }, 1000);\n  }\n\n  private startCountdown(timeCountDown: number, timereset: number) {\n    this.countdownTimerBet = 40;\n    const countdownInterval = setInterval(() => {\n      this.countdownTimerBet--;\n      if (this.countdownTimerBet <= 0) {\n        clearInterval(countdownInterval);\n      }\n    }, 1000);\n  }\n\n  private updateResults(newResult: number): void {\n    this.results.push(newResult);\n    if (this.results.length > 20) {\n      this.results.shift();\n    }\n  }\n\n  private updateResultsHis(newResult: number): void {\n    this.columnValues.push(newResult);\n\n    if (this.columnValues.length > 21) {\n      this.columnValues.shift();\n      this.clearLineNode(this.LineNode);\n    }\n  }\n\n  private updateResultsHistory(newResult: number): void {\n    this.resultsHistory.push(newResult);\n    if (this.resultsHistory.length > 100) {\n      this.resultsHistory.shift();\n    }\n  }\n  private updateResultsDice1History(newResult: number): void {\n    this.ListDice1His.push(newResult);\n    if (this.resultsHistory.length > 21) {\n      this.ListDice1His.shift();\n      this.clearLineNode(this.LineNodeDice1);\n    }\n  }\n\n  private updateResultsDice2History(newResult: number): void {\n    this.ListDice2His.push(newResult);\n    if (this.ListDice2His.length > 21) {\n      this.ListDice2His.shift();\n      this.clearLineNode(this.LineNodeDice2);\n    }\n  }\n\n  private updateResultsDice3History(newResult: number): void {\n    this.ListDice3His.push(newResult);\n    if (this.ListDice3His.length > 21) {\n      this.ListDice3His.shift();\n      this.clearLineNode(this.LineNodeDice3);\n    }\n  }\n\n  private chatAppear() {\n    tween(this.Table)\n      .to(0.3, {\n        position: new Vec3(this.Table.position.x - 130, this.Table.position.y),\n      })\n      .call(() => {\n        this.Chat.active = true;\n      })\n      .start();\n\n    tween(this.logo1)\n      .to(0.3, {\n        position: new Vec3(this.logo1.position.x - 130, this.logo1.position.y),\n      })\n      .start();\n\n    tween(this.logo2)\n      .to(0.3, {\n        position: new Vec3(this.logo2.position.x - 130, this.logo2.position.y),\n      })\n      .start();\n    this.unchat.active = true;\n  }\n\n  private chatUnAppear() {\n    this.Chat.active = false;\n    this.unchat.active = false;\n\n    tween(this.Table)\n      .to(0.3, {\n        position: new Vec3(this.Table.position.x + 130, this.Table.position.y),\n      })\n      .start();\n\n    tween(this.logo1)\n      .to(0.3, {\n        position: new Vec3(this.logo1.position.x + 130, this.logo1.position.y),\n      })\n      .start();\n\n    tween(this.logo2)\n      .to(0.3, {\n        position: new Vec3(this.logo2.position.x + 130, this.logo2.position.y),\n      })\n      .start();\n  }\n\n  private handleEvent(): void {\n    // Move the value of each label to the next label\n    for (let i = this.LableChat.length - 1; i > 0; i--) {\n      this.LableChat[i].string = this.LableChat[i - 1].string;\n    }\n\n    // Assign the value of the edit box to the first label\n    this.LableChat[0].string =\n      this.loggedInUsername + \": \" + this.editBoxChat.string;\n    this.editBoxChat.string = \"\";\n    // this.editBoxChat.node.on(EditBox.EventType.EDITING_RETURN)\n  }\n  private introduceBoardActive() {\n    this.introduceBoard.active = true;\n  }\n\n  private introduceBoardUnActive() {\n    this.introduceBoard.active = false;\n  }\n\n  private historyNodeActive() {\n    this.HistoryNode.active = true;\n  }\n\n  private historyNodeUnActive() {\n    this.HistoryNode.active = false;\n  }\n\n  private createNodeHistory() {\n    let gapBetweenColumns = this.columnWidth * 1.5;\n\n    let lineContainer = new Node();\n    lineContainer.parent = this.LineNode;\n\n    let graphics = lineContainer.addComponent(Graphics);\n    graphics.lineWidth = 10;\n    graphics.strokeColor = new Color(255, 0, 0);\n    let prevColumnNode: Node = null;\n    this.NumberNodesResultHistory.forEach((node, index) => {\n      const value = this.columnValues[index];\n      if (value !== undefined) {\n        const sprite = node.getComponent(Sprite);\n        if (sprite) {\n          let spriteFrame;\n          if (value >= 3 && value <= 10) {\n            if (value === 3) {\n              spriteFrame = this.listSpritetNumberHistory[0];\n            }\n\n            if (value === 4) {\n              spriteFrame = this.listSpritetNumberHistory[1];\n            }\n\n            if (value === 5) {\n              spriteFrame = this.listSpritetNumberHistory[2];\n            }\n\n            if (value === 6) {\n              spriteFrame = this.listSpritetNumberHistory[3];\n            }\n\n            if (value === 7) {\n              spriteFrame = this.listSpritetNumberHistory[4];\n            }\n\n            if (value === 8) {\n              spriteFrame = this.listSpritetNumberHistory[5];\n            }\n\n            if (value === 9) {\n              spriteFrame = this.listSpritetNumberHistory[6];\n            }\n\n            if (value === 10) {\n              spriteFrame = this.listSpritetNumberHistory[7];\n            }\n            node.setPosition(value * gapBetweenColumns * 0.2, node.position.y);\n            // if\n          } else if (value > 10) {\n            node.setPosition(value * gapBetweenColumns * 0.2, node.position.y);\n            if (value === 11) {\n              spriteFrame = this.listSpritetNumberHistory[8];\n            }\n\n            if (value === 12) {\n              spriteFrame = this.listSpritetNumberHistory[9];\n            }\n\n            if (value === 13) {\n              spriteFrame = this.listSpritetNumberHistory[10];\n            }\n\n            if (value === 14) {\n              spriteFrame = this.listSpritetNumberHistory[11];\n            }\n\n            if (value === 15) {\n              spriteFrame = this.listSpritetNumberHistory[12];\n            }\n\n            if (value === 16) {\n              spriteFrame = this.listSpritetNumberHistory[13];\n            }\n\n            if (value === 17) {\n              spriteFrame = this.listSpritetNumberHistory[14];\n            }\n\n            if (value === 18) {\n              spriteFrame = this.listSpritetNumberHistory[15];\n            }\n          } else {\n            console.error(\"Invalid result value:\", value);\n            node.active = false; // Ẩn node ảnh nếu giá trị không hợp lệ\n            return;\n          }\n          sprite.spriteFrame = spriteFrame;\n          node.active = true; // Kích hoạt node ảnh\n          if (prevColumnNode) {\n            graphics.moveTo(\n              prevColumnNode.position.x,\n              prevColumnNode.position.y\n            );\n            graphics.lineTo(node.position.x, node.position.y);\n            graphics.stroke();\n          }\n          prevColumnNode = node;\n        } else {\n          console.error(\"Sprite is missing!\");\n        }\n      } else {\n        node.active = false; // Ẩn node ảnh nếu giá trị không tồn tại\n      }\n    });\n  }\n\n  private createNodeDice1History() {\n    let gapBetweenColumns = this.columnWidth * 1.5;\n\n    let lineContainer = new Node();\n    lineContainer.parent = this.LineNodeDice1;\n\n    let graphics = lineContainer.addComponent(Graphics);\n    graphics.lineWidth = 5;\n    graphics.strokeColor = new Color(247, 62, 245);\n    let prevColumnNode: Node = null;\n    this.ListDice1Node.forEach((node, index) => {\n      const value = this.ListDice1His[index];\n      if (value !== undefined) {\n        node.setPosition(value * gapBetweenColumns * 0.61, node.position.y);\n        node.active = true;\n        if (prevColumnNode) {\n          graphics.moveTo(prevColumnNode.position.x, prevColumnNode.position.y);\n          graphics.lineTo(node.position.x, node.position.y);\n          graphics.stroke();\n        }\n        prevColumnNode = node;\n      } else {\n        node.active = false; // Ẩn node ảnh nếu giá trị không tồn tại\n      }\n    });\n  }\n\n  private createNodeDice2History() {\n    let gapBetweenColumns = this.columnWidth * 1.5;\n\n    let lineContainer = new Node();\n    lineContainer.parent = this.LineNodeDice2;\n\n    let graphics = lineContainer.addComponent(Graphics);\n    graphics.lineWidth = 5;\n    graphics.strokeColor = new Color(222, 51, 70);\n    let prevColumnNode: Node = null;\n    this.ListDice2Node.forEach((node, index) => {\n      const value = this.ListDice2His[index];\n      if (value !== undefined) {\n        node.setPosition(value * gapBetweenColumns * 0.61, node.position.y);\n        node.active = true;\n        if (prevColumnNode) {\n          graphics.moveTo(prevColumnNode.position.x, prevColumnNode.position.y);\n          graphics.lineTo(node.position.x, node.position.y);\n          graphics.stroke();\n        }\n        prevColumnNode = node;\n      } else {\n        node.active = false; // Ẩn node ảnh nếu giá trị không tồn tại\n      }\n    });\n  }\n\n  private createNodeDice3History() {\n    let gapBetweenColumns = this.columnWidth * 1.5;\n\n    let lineContainer = new Node();\n    lineContainer.parent = this.LineNodeDice3;\n\n    let graphics = lineContainer.addComponent(Graphics);\n    graphics.lineWidth = 5;\n    graphics.strokeColor = new Color(78, 251, 151);\n    let prevColumnNode: Node = null;\n    this.ListDice3Node.forEach((node, index) => {\n      const value = this.ListDice3His[index];\n      if (value !== undefined) {\n        node.setPosition(value * gapBetweenColumns * 0.61, node.position.y);\n        node.active = true;\n        if (prevColumnNode) {\n          graphics.moveTo(prevColumnNode.position.x, prevColumnNode.position.y);\n          graphics.lineTo(node.position.x, node.position.y);\n          graphics.stroke();\n        }\n        prevColumnNode = node;\n      } else {\n        node.active = false; // Ẩn node ảnh nếu giá trị không tồn tại\n      }\n    });\n  }\n\n  createColumn(columnValue: number): Node {\n    let columnNode = instantiate(this.black);\n    return columnNode;\n  }\n\n  private clearLineNode(LineNode: Node) {\n    if (LineNode) {\n      LineNode.removeAllChildren();\n    } else {\n      console.warn(\"LineNode is not available.\");\n    }\n  }\n\n  private unDice1() {\n    this.unDice1His.node.active = false;\n    this.LineNodeDice1.active = false;\n    this.Dice1Hist.active = false;\n  }\n\n  private ActiveDice1() {\n    this.unDice1His.node.active = true;\n    this.LineNodeDice1.active = true;\n    this.Dice1Hist.active = true;\n  }\n\n  private unDice2() {\n    this.unDice2His.node.active = false;\n    this.LineNodeDice2.active = false;\n    this.Dice2Hist.active = false;\n  }\n\n  private ActiveDice2() {\n    this.unDice2His.node.active = true;\n    this.LineNodeDice2.active = true;\n    this.Dice2Hist.active = true;\n  }\n\n  private unDice3() {\n    this.unDice3His.node.active = false;\n    this.LineNodeDice3.active = false;\n    this.Dice3ist.active = false;\n  }\n\n  private ActiveDice3() {\n    this.unDice3His.node.active = true;\n    this.LineNodeDice3.active = true;\n    this.Dice3ist.active = true;\n  }\n\n  private activePage() {\n    if (this.page1His.active === true) {\n      this.page2His.active = true;\n      this.page1His.active = false;\n      this.page2Button1.node.active = true;\n      this.page2Button2.node.active = true;\n      if (this.Dice1His.active === false) {\n        this.Dice1His.active = true;\n        this.Dice2His.active = true;\n        this.Dice3His.active = true;\n      }\n    }\n  }\n\n  private activePage2() {\n    if (this.page2His.active === true) {\n      this.page2His.active = false;\n      this.page1His.active = true;\n      this.page2Button1.node.active = false;\n      this.page2Button2.node.active = false;\n      if (this.Dice1His.active === true) {\n        this.Dice1His.active = false;\n        this.Dice2His.active = false;\n        this.Dice3His.active = false;\n      }\n    }\n  }\n\n  private CancelBet() {\n    if (this.gameEnd === false) {\n      this.totalUserBetOver =\n        this.totalUserBetOver - this.clonetotalUserBetOver;\n      this.clonetotalUserBetOver = 0;\n      // this.totalUserBetUnder =\n      //   this.totalUserBetUnder - this.clonetotalUserBetUnder;\n      // this.clonetotalUserBetUnder = 0;\n      // this.UnderLableValueUser.string = this.totalUserBetOver.toString();\n      this.OverLableValueUser.string = this.userValuebetOver.toString();\n      console.log(this.totalUserBetOver);\n    }\n  }\n\n  private HistoryUserBetActiveH() {\n    this.HistoryUserBet.active = true;\n  }\n\n  private HistoryUserBetUnable() {\n    this.HistoryUserBet.active = false;\n  }\n\n  private HistoryUserActiveH() {\n    this.HistoryUser.active = true;\n  }\n\n  private HistoryUserUnable() {\n    this.HistoryUser.active = false;\n  }\n\n  private doubleBet() {\n    if (\n      this.checkOver === true &&\n      this.totalUserBetOver * 2 <= this.cloneBalanUser &&\n      this.totalUserBetOver * 2 <= this.balanceUser &&\n      this.gameEnd === false\n    ) {\n      this.totalUserBetOver = this.totalUserBetOver * 2;\n\n      this.clonetotalUserBetOver =\n        this.totalUserBetOver - this.userValuebetOver;\n      this.OverLableValueUser.string = this.totalUserBetOver.toString();\n    }\n\n    if (\n      this.checkUnder === true &&\n      this.totalUserBetUnder * 2 <= this.cloneBalanUser &&\n      this.gameEnd === false\n    ) {\n      this.totalUserBetUnder = this.totalUserBetUnder * 2;\n      this.clonetotalUserBetUnder =\n        this.totalUserBetUnder - this.userValuebetUnder;\n      this.UnderLableValueUser.string = this.totalUserBetUnder.toString();\n    }\n  }\n\n  private winRate() {\n    this.Winrate.active = true;\n  }\n  private winRateUn() {\n    this.Winrate.active = false;\n  }\n\n  private getUsernameAndBalanceFromLocalStorage(\n    username: string\n  ): { username: string; balance: number } | null {\n    const storedAccounts = localStorage.getItem(\"registeredAccounts\");\n    if (storedAccounts) {\n      const registeredAccounts: AccountInfo[] = JSON.parse(storedAccounts);\n      const account = registeredAccounts.find(\n        (acc) => acc.username === username\n      );\n      if (account) {\n        return { username: account.username, balance: account.balance };\n      } else {\n        console.log(\"Tài khoản không tồn tại!\");\n        return null;\n      }\n    } else {\n      console.log(\"Không có dữ liệu tài khoản trong Local Storage!\");\n      return null;\n    }\n  }\n\n  private setUsernameAndBalanceToLocalStorage(\n    username: string,\n    newBalance: number\n  ): boolean {\n    const storedAccounts = localStorage.getItem(\"registeredAccounts\");\n    if (storedAccounts) {\n      let registeredAccounts: AccountInfo[] = JSON.parse(storedAccounts);\n      const index = registeredAccounts.findIndex(\n        (acc) => acc.username === username\n      );\n      if (index !== -1) {\n        registeredAccounts[index].balance = newBalance;\n        localStorage.setItem(\n          \"registeredAccounts\",\n          JSON.stringify(registeredAccounts)\n        );\n        return true; // Trả về true nếu cập nhật thành công\n      } else {\n        console.log(\"Tài khoản không tồn tại!\");\n        return false; // Trả về false nếu tài khoản không tồn tại\n      }\n    } else {\n      console.log(\"Không có dữ liệu tài khoản trong Local Storage!\");\n      return false; // Trả về false nếu không có dữ liệu trong Local Storage\n    }\n  }\n\n  formatNumberWithCommas(number) {\n    return number.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \".\");\n  }\n\n  formatNumberWithCommas2(number) {\n    if (number >= 1000000 && number < 1000000000) {\n      return (\n        (number / 1000000).toFixed(2).replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\") +\n        \"M\"\n      );\n    } else if (number >= 1000000000) {\n      return (\n        (number / 1000000000).toFixed(2).replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\") +\n        \"B\"\n      );\n    } else {\n      return number.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \".\");\n    }\n  }\n\n  private currentTime() {\n    const currentTime: Date = new Date();\n\n    const hour: number = currentTime.getHours();\n    const minute: number = currentTime.getMinutes();\n    const second: number = currentTime.getSeconds();\n\n    return `${hour}:${minute}:${second}`;\n  }\n\n  private buttonMusicb() {\n    if (this.offMusic) {\n      // Trừ 62 nếu đang ở trạng thái trừ\n      tween(this.buttonMusic)\n        .to(0.2, { position: new Vec3(-31) })\n        .start();\n      this.AudioController.settingAudio(0);\n    } else {\n      // Cộng 62 nếu đang ở trạng thái cộng\n      tween(this.buttonMusic)\n        .to(0.2, { position: new Vec3(31) })\n        .start();\n      this.AudioController.settingAudio(1);\n    }\n    console.log(this.offMusic);\n\n    // Đảo ngược trạng thái sau mỗi lần gọi\n    this.offMusic = !this.offMusic;\n  }\n}\n"]}